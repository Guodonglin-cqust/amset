{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"AMSET: ab initio scattering and transport \u00b6 Introduction \u00b6 AMSET is an efficient package for calculating electron lifetimes and transport properties in solid-state materials from first principles. A primary aim of AMSET is to be amenable to high-throughput computational screening. Features of AMSET include: Inputs obtainable from first-principles calculations. The primary input for AMSET is an uniform band structure calculation. Scattering rates calculated in the Born approximation using common materials properties such as phonon frequencies and dielectric constants. Transport properties calculated through the Boltzmann transport equation. Efficient implementation that can run on a personal laptop. Supported ab initio codes Currently, AMSET only supports VASP calculations, however, additional periodic DFT codes will be added in the future. Scattering Mechanisms \u00b6 The scattering mechanisms currently implemented in AMSET are: Acoustic deformation potential scattering Ionized impurity scattering Polar optical phonon scattering Piezoelectric scattering More information on the formalism for each scattering mechanism is available in the scattering section of the documentation. What's new? \u00b6 Track changes to AMSET through the changelog . Contributing / Contact / Support \u00b6 Want to see something added or changed? Some ways to get involved are: Help us improve the documentation \u2013 tell us where you got stuck and improve the install process for everyone. Let us know if you'd like to see certain features. Point us to areas of the code that are difficult to understand or use. Contribute code. You can do this by forking AMSET on Github and submitting a pull request. The list of contributors to AMSET can be found here . Read more about contributing code to AMSET here .","title":"Introduction"},{"location":"#amset-ab-initio-scattering-and-transport","text":"","title":"AMSET: ab initio scattering and transport"},{"location":"#introduction","text":"AMSET is an efficient package for calculating electron lifetimes and transport properties in solid-state materials from first principles. A primary aim of AMSET is to be amenable to high-throughput computational screening. Features of AMSET include: Inputs obtainable from first-principles calculations. The primary input for AMSET is an uniform band structure calculation. Scattering rates calculated in the Born approximation using common materials properties such as phonon frequencies and dielectric constants. Transport properties calculated through the Boltzmann transport equation. Efficient implementation that can run on a personal laptop. Supported ab initio codes Currently, AMSET only supports VASP calculations, however, additional periodic DFT codes will be added in the future.","title":"Introduction"},{"location":"#scattering-mechanisms","text":"The scattering mechanisms currently implemented in AMSET are: Acoustic deformation potential scattering Ionized impurity scattering Polar optical phonon scattering Piezoelectric scattering More information on the formalism for each scattering mechanism is available in the scattering section of the documentation.","title":"Scattering Mechanisms"},{"location":"#whats-new","text":"Track changes to AMSET through the changelog .","title":"What's new?"},{"location":"#contributing-contact-support","text":"Want to see something added or changed? Some ways to get involved are: Help us improve the documentation \u2013 tell us where you got stuck and improve the install process for everyone. Let us know if you'd like to see certain features. Point us to areas of the code that are difficult to understand or use. Contribute code. You can do this by forking AMSET on Github and submitting a pull request. The list of contributors to AMSET can be found here . Read more about contributing code to AMSET here .","title":"Contributing / Contact / Support"},{"location":"changelog/","text":"Change log \u00b6 [Unreleased] \u00b6 v0.4.6 \u00b6 Enhancements: --stats option added to band plotter that prints the effective masses and band structure information. Bug fixes: Fixed extracting wavefunction coefficients in systems with zero weighted k-points. v0.4.5 \u00b6 Enhancements: --gnuplot option added to transport plotter to allow writing the plot data to simple text files. v0.4.4 \u00b6 Enhancements: Amset can now be run from a band_structure_data.json file. This should contain the keys \"band_structure\" and \"nelect\". Bug fixes: Improved support for spin-polarized calculations. Fixed projection overlaps. v0.4.3 \u00b6 Enhancements: --n-type and --p-type options added to transport, mobility, and convergence plotters. Power factor added to transport and convergence plotters. Bug fixes: Fix for mean free path scattering (@kbspooner). Fix for piezoelectric scattering. Fix for cache_wavefunction = False with non-SOC wavefunctions. Specify numba version for interoperability with interpolation package. v0.4.2 \u00b6 New features: Added tool to plot transport properties ( amset plot transport ). Added tool to plot mobility in more detail ( amset plot mobility ). Added tool to plot convergence ( amset plot convergence ). Added option to highlight scattering rates by the derivative of the Fermi\u2013Dirac thought amset plot rates <filename> --dfde . Enhancements: Reduce memory requirements when cache_wavefunction = False . Don't write output files if file_format = None . Bug fixes: Re-enabled CRTA and MFP scattering. Don't use multiprocessing with basic scatterers. Fix direction dependent effective masses. v0.4.1 \u00b6 Enhancements: Faster wave function overlap calculation using numba jit. Better management of memory and error reporting in subprocesses Automatically handle memory errors when caching wave function coefficients. v0.4.0 \u00b6 New features: Multiprocessing now used in the calculation of scattering rates. Number of processes controlled using the nworkers option. Bug fixes: More robust extraction of deformation potentials. Only use ascii characters in output log files. v0.3.3 \u00b6 New features: Enable amset to handle systems containing a single k-point in a certain direction (useful for 2D materials). v0.3.2 \u00b6 Bug fixes: Fixed a bug in extracting deformation potentials introduced in version 0.3.1. v0.3.1 \u00b6 New features: free_carrier_screening option to allow free carriers to screen polar optical and piezoelectric scattering rates (see docs for me details). Bug fixes: Fixed a bug in extracting deformation potentials introduced in version 0.3.0. v0.3.0 \u00b6 New features: cache_wavefunction option to control memory demand (see docs for more details). Revtex plot style support. Enabled by adding --style revtex to the end of plotting commands. Support for spin\u2013orbit coupling. Support for non-Gamma centered k-point meshes. Ability to extract deformation potential for specific bands. zero_weighted_kpoints option to control processing of zero-weighted k-points (see the docs for more details). Enhancements: Revamped lineshape plotter. Massive (~100x) speedup for calculating polar optical phonon frequency. Better handling of Fermi levels from VASP band structures. Speed up effective mass calculation, and cases where only basic scatterers are used. v0.2.2 \u00b6 Fix PyPi installation. v0.2.1 \u00b6 Fix GitHub releases. v0.2.0 \u00b6 Major update with many new features: Elastic, dielectric, and piezoelectric tensors are now supported. Wave function coefficients are now desymmetrised on the fly, meaning wavefunction.h5 files are much smaller. New tool to extract wave function coefficients that removes the pawpyseed requirement and is much faster. This is a python only implementation and doesn't require compiling any additional codes. Mesh properties (scattering rates etc, energies, velocities) stored in a separate mesh.h5 file which is much smaller and faster to read. Revamped unit tests. Lots of bug fixes, including fixing compatibility with quadpy. v0.1.3 \u00b6 Bug fix for latest quadpy version. v0.1.2 \u00b6 Fix pypi description. v0.1.1 \u00b6 Add release and packaging support. v0.1.0 \u00b6 Initial release containing: amset command line tool Ionized impurity, acoustic deformation potential, piezeoelectric, and polar optical phonon scattering. Quantum mechanical wave function overlaps. Modified tetrahedron integration. v0.0.0 \u00b6 Project created.","title":"Changelog"},{"location":"changelog/#change-log","text":"","title":"Change log"},{"location":"changelog/#unreleased","text":"","title":"[Unreleased]"},{"location":"changelog/#v046","text":"Enhancements: --stats option added to band plotter that prints the effective masses and band structure information. Bug fixes: Fixed extracting wavefunction coefficients in systems with zero weighted k-points.","title":"v0.4.6"},{"location":"changelog/#v045","text":"Enhancements: --gnuplot option added to transport plotter to allow writing the plot data to simple text files.","title":"v0.4.5"},{"location":"changelog/#v044","text":"Enhancements: Amset can now be run from a band_structure_data.json file. This should contain the keys \"band_structure\" and \"nelect\". Bug fixes: Improved support for spin-polarized calculations. Fixed projection overlaps.","title":"v0.4.4"},{"location":"changelog/#v043","text":"Enhancements: --n-type and --p-type options added to transport, mobility, and convergence plotters. Power factor added to transport and convergence plotters. Bug fixes: Fix for mean free path scattering (@kbspooner). Fix for piezoelectric scattering. Fix for cache_wavefunction = False with non-SOC wavefunctions. Specify numba version for interoperability with interpolation package.","title":"v0.4.3"},{"location":"changelog/#v042","text":"New features: Added tool to plot transport properties ( amset plot transport ). Added tool to plot mobility in more detail ( amset plot mobility ). Added tool to plot convergence ( amset plot convergence ). Added option to highlight scattering rates by the derivative of the Fermi\u2013Dirac thought amset plot rates <filename> --dfde . Enhancements: Reduce memory requirements when cache_wavefunction = False . Don't write output files if file_format = None . Bug fixes: Re-enabled CRTA and MFP scattering. Don't use multiprocessing with basic scatterers. Fix direction dependent effective masses.","title":"v0.4.2"},{"location":"changelog/#v041","text":"Enhancements: Faster wave function overlap calculation using numba jit. Better management of memory and error reporting in subprocesses Automatically handle memory errors when caching wave function coefficients.","title":"v0.4.1"},{"location":"changelog/#v040","text":"New features: Multiprocessing now used in the calculation of scattering rates. Number of processes controlled using the nworkers option. Bug fixes: More robust extraction of deformation potentials. Only use ascii characters in output log files.","title":"v0.4.0"},{"location":"changelog/#v033","text":"New features: Enable amset to handle systems containing a single k-point in a certain direction (useful for 2D materials).","title":"v0.3.3"},{"location":"changelog/#v032","text":"Bug fixes: Fixed a bug in extracting deformation potentials introduced in version 0.3.1.","title":"v0.3.2"},{"location":"changelog/#v031","text":"New features: free_carrier_screening option to allow free carriers to screen polar optical and piezoelectric scattering rates (see docs for me details). Bug fixes: Fixed a bug in extracting deformation potentials introduced in version 0.3.0.","title":"v0.3.1"},{"location":"changelog/#v030","text":"New features: cache_wavefunction option to control memory demand (see docs for more details). Revtex plot style support. Enabled by adding --style revtex to the end of plotting commands. Support for spin\u2013orbit coupling. Support for non-Gamma centered k-point meshes. Ability to extract deformation potential for specific bands. zero_weighted_kpoints option to control processing of zero-weighted k-points (see the docs for more details). Enhancements: Revamped lineshape plotter. Massive (~100x) speedup for calculating polar optical phonon frequency. Better handling of Fermi levels from VASP band structures. Speed up effective mass calculation, and cases where only basic scatterers are used.","title":"v0.3.0"},{"location":"changelog/#v022","text":"Fix PyPi installation.","title":"v0.2.2"},{"location":"changelog/#v021","text":"Fix GitHub releases.","title":"v0.2.1"},{"location":"changelog/#v020","text":"Major update with many new features: Elastic, dielectric, and piezoelectric tensors are now supported. Wave function coefficients are now desymmetrised on the fly, meaning wavefunction.h5 files are much smaller. New tool to extract wave function coefficients that removes the pawpyseed requirement and is much faster. This is a python only implementation and doesn't require compiling any additional codes. Mesh properties (scattering rates etc, energies, velocities) stored in a separate mesh.h5 file which is much smaller and faster to read. Revamped unit tests. Lots of bug fixes, including fixing compatibility with quadpy.","title":"v0.2.0"},{"location":"changelog/#v013","text":"Bug fix for latest quadpy version.","title":"v0.1.3"},{"location":"changelog/#v012","text":"Fix pypi description.","title":"v0.1.2"},{"location":"changelog/#v011","text":"Add release and packaging support.","title":"v0.1.1"},{"location":"changelog/#v010","text":"Initial release containing: amset command line tool Ionized impurity, acoustic deformation potential, piezeoelectric, and polar optical phonon scattering. Quantum mechanical wave function overlaps. Modified tetrahedron integration.","title":"v0.1.0"},{"location":"changelog/#v000","text":"Project created.","title":"v0.0.0"},{"location":"contributing/","text":"Contributing to AMSET \u00b6 We love your input! We want to make contributing to AMSET as easy and transparent as possible, whether it's: Reporting a bug Discussing the current state of the code Submitting a fix Proposing or implementing new features Becoming a maintainer Reporting bugs, getting help, and discussion \u00b6 AMSET code is still in heavy development, so we do not yet have a Google Group. However, feel free at any time to submit questions or bugs to the amset Discourse forum . If you are making a bug report, incorporate as many elements of the following as possible to ensure a timely response and avoid the need for followups: A quick summary and/or background Steps to reproduce - be specific! Provide sample code. What you expected would happen, compared to what actually happens The full stack trace of any errors you encounter Notes (possibly including why you think this might be happening, or steps you tried that didn't work) We love thorough bug reports as this means the development team can make quick and meaningful fixes. When we confirm your bug report, we'll move it to the GitHub issues where its progress can be further tracked. Contributing code modifications or additions through Github \u00b6 We use github to host code, to track issues and feature requests, as well as accept pull requests. We are currently working on compiling our list of contributors. Pull requests are the best way to propose changes to the codebase. Follow the Github flow for more information on this procedure. The basic procedure for making a PR is: * Fork the repo and create your branch from master. * Commit your improvements to your branch and push to your Github fork (repo). * When you're finished, go to your fork and make a Pull Request. It will automatically update if you need to make further changes. How to Make a Great Pull Request \u00b6 We have a few tips for writing good PRs that are accepted into the main repo: Use the Google Code style for all of your code. Find an example here Your code should have (4) spaces instead of tabs. If needed, update the documentation. Write tests for new features! Good tests are 100%, absolutely necessary for good code. We use the python unittest framework -- see some of the other tests in this repo for examples, or review the Hitchhiker's guide to python for some good resources on writing good tests. Understand your contributions will fall under the same license as this repo. When you submit your PR, our CI service will automatically run your tests. We welcome good discussion on the best ways to write your code, and the comments on your PR are an excellent area for discussion. References \u00b6 This document was adapted from the open-source contribution guidelines for Facebook's Draft, as well as briandk's contribution template .","title":"Contributing"},{"location":"contributing/#contributing-to-amset","text":"We love your input! We want to make contributing to AMSET as easy and transparent as possible, whether it's: Reporting a bug Discussing the current state of the code Submitting a fix Proposing or implementing new features Becoming a maintainer","title":"Contributing to AMSET"},{"location":"contributing/#reporting-bugs-getting-help-and-discussion","text":"AMSET code is still in heavy development, so we do not yet have a Google Group. However, feel free at any time to submit questions or bugs to the amset Discourse forum . If you are making a bug report, incorporate as many elements of the following as possible to ensure a timely response and avoid the need for followups: A quick summary and/or background Steps to reproduce - be specific! Provide sample code. What you expected would happen, compared to what actually happens The full stack trace of any errors you encounter Notes (possibly including why you think this might be happening, or steps you tried that didn't work) We love thorough bug reports as this means the development team can make quick and meaningful fixes. When we confirm your bug report, we'll move it to the GitHub issues where its progress can be further tracked.","title":"Reporting bugs, getting help, and discussion"},{"location":"contributing/#contributing-code-modifications-or-additions-through-github","text":"We use github to host code, to track issues and feature requests, as well as accept pull requests. We are currently working on compiling our list of contributors. Pull requests are the best way to propose changes to the codebase. Follow the Github flow for more information on this procedure. The basic procedure for making a PR is: * Fork the repo and create your branch from master. * Commit your improvements to your branch and push to your Github fork (repo). * When you're finished, go to your fork and make a Pull Request. It will automatically update if you need to make further changes.","title":"Contributing code modifications or additions through Github"},{"location":"contributing/#how-to-make-a-great-pull-request","text":"We have a few tips for writing good PRs that are accepted into the main repo: Use the Google Code style for all of your code. Find an example here Your code should have (4) spaces instead of tabs. If needed, update the documentation. Write tests for new features! Good tests are 100%, absolutely necessary for good code. We use the python unittest framework -- see some of the other tests in this repo for examples, or review the Hitchhiker's guide to python for some good resources on writing good tests. Understand your contributions will fall under the same license as this repo. When you submit your PR, our CI service will automatically run your tests. We welcome good discussion on the best ways to write your code, and the comments on your PR are an excellent area for discussion.","title":"How to Make a Great Pull Request"},{"location":"contributing/#references","text":"This document was adapted from the open-source contribution guidelines for Facebook's Draft, as well as briandk's contribution template .","title":"References"},{"location":"contributors/","text":"Contributors \u00b6 AMSET development is led by the Hacking Materials research group led by Anubhav Jain at Lawrence Berkeley National Lab, using primarily research funding from U.S. Department of Energy Early Career program. Alex Ganose is the primary developer. Other contributions are provided by: Junsoo Park and Alireza Faghaninia through the research group of A. Jain at LBNL. Kieran Spooner through the research group of David Scanlon at University College London. Francesco Ricci through the research group of Prof. Geoffroy Hautier at UC Louvain. Jason Frost","title":"Contributors"},{"location":"contributors/#contributors","text":"AMSET development is led by the Hacking Materials research group led by Anubhav Jain at Lawrence Berkeley National Lab, using primarily research funding from U.S. Department of Energy Early Career program. Alex Ganose is the primary developer. Other contributions are provided by: Junsoo Park and Alireza Faghaninia through the research group of A. Jain at LBNL. Kieran Spooner through the research group of David Scanlon at University College London. Francesco Ricci through the research group of Prof. Geoffroy Hautier at UC Louvain. Jason Frost","title":"Contributors"},{"location":"inputs/","text":".katex img { display: block; position: absolute; width: 100%; height: inherit; } Calculation Inputs \u00b6 Structural relaxation \u00b6 In order to obtain accurate results, the crystal structure should first be relaxed using \"tight\" calculation settings including high force and energy convergence criteria. Note, that this can often be expensive for very large structures. VASP settings for tight convergence ADDGRID = True EDIFF = 1E-8 EDIFFG = - 5E-4 PREC = Accurate NSW = 100 ISIF = 3 NELMIN = 5 Dense uniform band structure and wave function coefficients \u00b6 AMSET should be run on a vasprun.xml file from a \"dense\" uniform band structure calculation. Typically a k-point mesh density at least twice that needed to converge the total energy will be necessary to converge transport properties. Note this refers to the initial DFT mesh before Fourier interpolation. In order to obtain accurate band gaps often a hybrid DFT functional such as HSE06 is required. Wave function coefficients are required to calculate wave function overlaps. This requires the WAVECAR file to be written by VASP (achieved by setting LWAVE = True ). Wave function coefficients can then be extracted using the amset wave command. Coefficients are stored in the wavefunction.h5 file. VASP settings for uniform calculations ADDGRID = True EDIFF = 1E-8 PREC = Accurate NSW = 1 LWAVE = True Elastic constants \u00b6 Elastic constants can be calculated using finite differences in VASP. It is very important to first relax the structure using tight convergence settings, as described in the structural relaxation section . Details on the finite difference approach in VASP can be found on the IBRION documentation page. VASP settings for dielectric constants and phonon frequency ADDGRID = True EDIFF = 1E-8 PREC = Accurate NSW = 1 IBRION = 6 Deformation potentials \u00b6 The absolute deformation potential describes the change in energy of the bands with change in volume and is calculated as D n k = \u03b4 \u03b5 n k / \u03b4 S \u03b1 \u03b2 \\mathbf{D}_{n\\mathbf{k}} = \\delta \\varepsilon_{n\\mathbf{k}} / \\delta S_{\\alpha\\beta} D n k \u200b = \u03b4 \u03b5 n k \u200b / \u03b4 S \u03b1 \u03b2 \u200b where S \\mathbf{S} S is the uniform stress tensor. The deformation potential should be averaged over contraction (\u20130.5 %) and expansion (+0.5 %) of the lattice and calculated separately for each component of the strain tensor. To account for shifts in the average electrostatic potential between deformed cells, the eigenvalues are aligned to the average energy level of the core states. AMSET includes a tool to assist with the calculation of the deformation potentials. The initial input is a \"tight\" optimised structure as described in the structural relaxation section . Deformed structures are generated using the amset deform create command, which will generate a list of POSCARs each corresponding to a component of the strain tensor. Note that symmetry is automatically used to reduce the number of calculations needed. A single point calculation (no relaxation, i.e., NSW = 0 ) should be performed for each deformed POSCAR as well as the undeformed structure. VASP settings for deformation calculations ADDGRID = True EDIFF = 1E-8 PREC = Accurate NSW = 1 ICORELEVEL = 1 # needed to write the core levels to OUTCAR The deformation potentials can be calculated using the amset deform read command. This requires the paths to the undeformed and deformation calculations as inputs. The undeformed folder should be specified first, followed by the deformation folders. For example, amset deform read undeformed def-1 def-2 def-3 This will write the deformations potentials to a deformation.h5 file in the current directory. You can specify to use this file when calculating scattering rates by setting the deformation_potential option to \"deformation.h5\" . See the settings page for more details. Dielectric constants, piezoelectric constants and polar-phonon frequency \u00b6 Static and high-frequency dielectric constants, piezoelectric constants, and the \"effective polar phonon frequency\" can be obtained using density functional perturbation theory (DFPT). It is very important to first relax the structure using tight convergence settings, as described in the structural relaxation section . Details on DFPT in VASP can be found on the IBRION and LEPSILON documentation pages. VASP settings for dielectric constants and phonon frequency ADDGRID = True EDIFF = 1E-8 PREC = Accurate NSW = 1 IBRION = 8 LEPSILON = True Note, DFPT cannot be used with hybrid exchange-correlation functionals. In these cases the LCALCEPS flag should be used in combination with IBRION = 6 . The dielectric constants and polar phonon frequency can be extracted from the VASP outputs using the command: amset phonon-frequency The command should be run in a folder containing the vasprun.xml file output from the DFPT calculation. The effective phonon frequency is determined from the phonon frequencies \u03c9 q \u03bd \\omega_{\\mathbf{q}\\nu} \u03c9 q \u03bd \u200b (where \u03bd \\nu \u03bd is a phonon branch and q \\mathbf{q} q is a phonon wave vector) and eigenvectors e \u03ba \u03bd ( q ) \\mathbf{e}_{\\kappa\\nu}(\\mathbf{q}) e \u03ba \u03bd \u200b ( q ) (where \u03ba \\kappa \u03ba is an atom in the unit cell). In order to capture scattering from the full phonon band structure in a single phonon frequency, each phonon mode is weighted by the dipole moment it produces according to w \u03bd = \u2211 \u03ba [ 1 M \u03ba \u03c9 q \u03bd ] 1 / 2 \u00d7 [ q \u22c5 Z \u03ba \u2217 \u22c5 e \u03ba \u03bd ( q ) ] w_{\\nu} = \\sum_\\kappa \\left [ \\frac{1}{M_\\kappa \\omega_{\\mathbf{q}\\nu}} \\right]^{1/2} \\times \\left[ \\mathbf{q} \\cdot \\mathbf{Z}_\\kappa^* \\cdot \\mathbf{e}_{\\kappa\\nu}(\\mathbf{q}) \\right ] w \u03bd \u200b = \u03ba \u2211 \u200b [ M \u03ba \u200b \u03c9 q \u03bd \u200b 1 \u200b ] 1 / 2 \u00d7 [ q \u22c5 Z \u03ba \u2217 \u200b \u22c5 e \u03ba \u03bd \u200b ( q ) ] where Z \u03ba \u2217 \\mathbf{Z}_\\kappa^* Z \u03ba \u2217 \u200b is the Born effective charge. This naturally suppresses the contributions from transverse-optical and acoustic modes in the same manner as the more general formalism for computing Fr\u00f6lich based electron-phonon coupling. The weight is calculated only for \u0393 \\Gamma \u0393 -point phonon frequencies and averaged over the full unit sphere to capture both the polar divergence at q \u2192 0 \\mathbf{q} \\rightarrow 0 q \u2192 0 and any anisotropy in the dipole moments. The effective phonon frequency is calculated as the weighted sum over all \u0393 \\Gamma \u0393 -point phonon modes according to \u03c9 p o = \u03c9 \u0393 \u03bd w \u03bd \u2211 \u03bd w \u03bd . \\omega_\\mathrm{po} = \\frac{\\omega_{\\Gamma\\nu} w_{\\nu}}{\\sum_{\\nu} w_\\nu}. \u03c9 p o \u200b = \u2211 \u03bd \u200b w \u03bd \u200b \u03c9 \u0393 \u03bd \u200b w \u03bd \u200b \u200b .","title":"Calculation Inputs"},{"location":"inputs/#calculation-inputs","text":"","title":"Calculation Inputs"},{"location":"inputs/#structural-relaxation","text":"In order to obtain accurate results, the crystal structure should first be relaxed using \"tight\" calculation settings including high force and energy convergence criteria. Note, that this can often be expensive for very large structures. VASP settings for tight convergence ADDGRID = True EDIFF = 1E-8 EDIFFG = - 5E-4 PREC = Accurate NSW = 100 ISIF = 3 NELMIN = 5","title":"Structural relaxation"},{"location":"inputs/#dense-uniform-band-structure-and-wave-function-coefficients","text":"AMSET should be run on a vasprun.xml file from a \"dense\" uniform band structure calculation. Typically a k-point mesh density at least twice that needed to converge the total energy will be necessary to converge transport properties. Note this refers to the initial DFT mesh before Fourier interpolation. In order to obtain accurate band gaps often a hybrid DFT functional such as HSE06 is required. Wave function coefficients are required to calculate wave function overlaps. This requires the WAVECAR file to be written by VASP (achieved by setting LWAVE = True ). Wave function coefficients can then be extracted using the amset wave command. Coefficients are stored in the wavefunction.h5 file. VASP settings for uniform calculations ADDGRID = True EDIFF = 1E-8 PREC = Accurate NSW = 1 LWAVE = True","title":"Dense uniform band structure and wave function coefficients"},{"location":"inputs/#elastic-constants","text":"Elastic constants can be calculated using finite differences in VASP. It is very important to first relax the structure using tight convergence settings, as described in the structural relaxation section . Details on the finite difference approach in VASP can be found on the IBRION documentation page. VASP settings for dielectric constants and phonon frequency ADDGRID = True EDIFF = 1E-8 PREC = Accurate NSW = 1 IBRION = 6","title":"Elastic constants"},{"location":"inputs/#deformation-potentials","text":"The absolute deformation potential describes the change in energy of the bands with change in volume and is calculated as D n k = \u03b4 \u03b5 n k / \u03b4 S \u03b1 \u03b2 \\mathbf{D}_{n\\mathbf{k}} = \\delta \\varepsilon_{n\\mathbf{k}} / \\delta S_{\\alpha\\beta} D n k \u200b = \u03b4 \u03b5 n k \u200b / \u03b4 S \u03b1 \u03b2 \u200b where S \\mathbf{S} S is the uniform stress tensor. The deformation potential should be averaged over contraction (\u20130.5 %) and expansion (+0.5 %) of the lattice and calculated separately for each component of the strain tensor. To account for shifts in the average electrostatic potential between deformed cells, the eigenvalues are aligned to the average energy level of the core states. AMSET includes a tool to assist with the calculation of the deformation potentials. The initial input is a \"tight\" optimised structure as described in the structural relaxation section . Deformed structures are generated using the amset deform create command, which will generate a list of POSCARs each corresponding to a component of the strain tensor. Note that symmetry is automatically used to reduce the number of calculations needed. A single point calculation (no relaxation, i.e., NSW = 0 ) should be performed for each deformed POSCAR as well as the undeformed structure. VASP settings for deformation calculations ADDGRID = True EDIFF = 1E-8 PREC = Accurate NSW = 1 ICORELEVEL = 1 # needed to write the core levels to OUTCAR The deformation potentials can be calculated using the amset deform read command. This requires the paths to the undeformed and deformation calculations as inputs. The undeformed folder should be specified first, followed by the deformation folders. For example, amset deform read undeformed def-1 def-2 def-3 This will write the deformations potentials to a deformation.h5 file in the current directory. You can specify to use this file when calculating scattering rates by setting the deformation_potential option to \"deformation.h5\" . See the settings page for more details.","title":"Deformation potentials"},{"location":"inputs/#dielectric-constants-piezoelectric-constants-and-polar-phonon-frequency","text":"Static and high-frequency dielectric constants, piezoelectric constants, and the \"effective polar phonon frequency\" can be obtained using density functional perturbation theory (DFPT). It is very important to first relax the structure using tight convergence settings, as described in the structural relaxation section . Details on DFPT in VASP can be found on the IBRION and LEPSILON documentation pages. VASP settings for dielectric constants and phonon frequency ADDGRID = True EDIFF = 1E-8 PREC = Accurate NSW = 1 IBRION = 8 LEPSILON = True Note, DFPT cannot be used with hybrid exchange-correlation functionals. In these cases the LCALCEPS flag should be used in combination with IBRION = 6 . The dielectric constants and polar phonon frequency can be extracted from the VASP outputs using the command: amset phonon-frequency The command should be run in a folder containing the vasprun.xml file output from the DFPT calculation. The effective phonon frequency is determined from the phonon frequencies \u03c9 q \u03bd \\omega_{\\mathbf{q}\\nu} \u03c9 q \u03bd \u200b (where \u03bd \\nu \u03bd is a phonon branch and q \\mathbf{q} q is a phonon wave vector) and eigenvectors e \u03ba \u03bd ( q ) \\mathbf{e}_{\\kappa\\nu}(\\mathbf{q}) e \u03ba \u03bd \u200b ( q ) (where \u03ba \\kappa \u03ba is an atom in the unit cell). In order to capture scattering from the full phonon band structure in a single phonon frequency, each phonon mode is weighted by the dipole moment it produces according to w \u03bd = \u2211 \u03ba [ 1 M \u03ba \u03c9 q \u03bd ] 1 / 2 \u00d7 [ q \u22c5 Z \u03ba \u2217 \u22c5 e \u03ba \u03bd ( q ) ] w_{\\nu} = \\sum_\\kappa \\left [ \\frac{1}{M_\\kappa \\omega_{\\mathbf{q}\\nu}} \\right]^{1/2} \\times \\left[ \\mathbf{q} \\cdot \\mathbf{Z}_\\kappa^* \\cdot \\mathbf{e}_{\\kappa\\nu}(\\mathbf{q}) \\right ] w \u03bd \u200b = \u03ba \u2211 \u200b [ M \u03ba \u200b \u03c9 q \u03bd \u200b 1 \u200b ] 1 / 2 \u00d7 [ q \u22c5 Z \u03ba \u2217 \u200b \u22c5 e \u03ba \u03bd \u200b ( q ) ] where Z \u03ba \u2217 \\mathbf{Z}_\\kappa^* Z \u03ba \u2217 \u200b is the Born effective charge. This naturally suppresses the contributions from transverse-optical and acoustic modes in the same manner as the more general formalism for computing Fr\u00f6lich based electron-phonon coupling. The weight is calculated only for \u0393 \\Gamma \u0393 -point phonon frequencies and averaged over the full unit sphere to capture both the polar divergence at q \u2192 0 \\mathbf{q} \\rightarrow 0 q \u2192 0 and any anisotropy in the dipole moments. The effective phonon frequency is calculated as the weighted sum over all \u0393 \\Gamma \u0393 -point phonon modes according to \u03c9 p o = \u03c9 \u0393 \u03bd w \u03bd \u2211 \u03bd w \u03bd . \\omega_\\mathrm{po} = \\frac{\\omega_{\\Gamma\\nu} w_{\\nu}}{\\sum_{\\nu} w_\\nu}. \u03c9 p o \u200b = \u2211 \u03bd \u200b w \u03bd \u200b \u03c9 \u0393 \u03bd \u200b w \u03bd \u200b \u200b .","title":"Dielectric constants, piezoelectric constants and polar-phonon frequency"},{"location":"installation/","text":"Installation \u00b6 AMSET is a Python 3 package and requires a typical scientific Python stack . AMSET can be installed using the Python package manager \"Pip\", which will automatically setup other Python packages as required: pip install amset If not installing from inside a virtual environment or conda environment, you may need to specify to install as a user via: pip install amset --user Developer Installation \u00b6 To install an editable version of AMSET, first clone the repository from GitHub, then install using pip: git clone https://github.com/hackingmaterials/amset.git cd amset pip install -e . Installing AMSET on NERSC \u00b6 The BolzTraP2 dependency requires some configuration to be installed properly on CRAY systems. Accordingly, AMSET can be installed using: CXX = icpc CC = icc pip install amset","title":"Installation"},{"location":"installation/#installation","text":"AMSET is a Python 3 package and requires a typical scientific Python stack . AMSET can be installed using the Python package manager \"Pip\", which will automatically setup other Python packages as required: pip install amset If not installing from inside a virtual environment or conda environment, you may need to specify to install as a user via: pip install amset --user","title":"Installation"},{"location":"installation/#developer-installation","text":"To install an editable version of AMSET, first clone the repository from GitHub, then install using pip: git clone https://github.com/hackingmaterials/amset.git cd amset pip install -e .","title":"Developer Installation"},{"location":"installation/#installing-amset-on-nersc","text":"The BolzTraP2 dependency requires some configuration to be installed properly on CRAY systems. Accordingly, AMSET can be installed using: CXX = icpc CC = icc pip install amset","title":"Installing AMSET on NERSC"},{"location":"license/","text":"Amset Copyright (c) 2015, The Regents of the University of California, through Lawrence Berkeley National Laboratory (subject to receipt of any required approvals from the U.S. Dept. of Energy). All rights reserved. Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met: (1) Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer. (2) Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution. (3) Neither the name of the University of California, Lawrence Berkeley National Laboratory, U.S. Dept. of Energy nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission. THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. You are under no obligation whatsoever to provide any bug fixes, patches, or upgrades to the features, functionality or performance of the source code (\"Enhancements\") to anyone; however, if you choose to make your Enhancements available either publicly, or directly to Lawrence Berkeley National Laboratory or its contributors, without imposing a separate written license agreement for such Enhancements, then you hereby grant the following license: a non-exclusive, royalty-free perpetual license to install, use, modify, prepare derivative works, incorporate into other computer software, distribute, and sublicense such enhancements or derivative works thereof, in binary and source code form.","title":"License"},{"location":"scattering/","text":".katex img { display: block; position: absolute; width: 100%; height: inherit; } Calculating scattering rates \u00b6 AMSET calculates mode dependent scattering rates within the Born approximation using common materials parameters. The differential scattering rate from state \u2223 n k \u27e9 \\mathinner{|n\\mathbf{k}\\rangle} \u2223 n k \u27e9 to state \u2223 m k + q \u27e9 \\mathinner{|m\\mathbf{k} + \\mathbf{q}\\rangle} \u2223 m k + q \u27e9 is calculated using Fermi's golden rule as \u03c4 ~ n k \u2192 m k + q \u2212 1 = 2 \u03c0 \u210f \u2223 g n m ( k , q ) \u2223 2 \u03b4 ( \u03b5 n k \u2212 \u03b5 m k + q ) , \\tilde{\\tau}_{n\\mathbf{k}\\rightarrow m\\mathbf{k}+\\mathbf{q}}^{-1} = \\frac{2\\pi}{\\hbar} \\lvert g_{nm}(\\mathbf{k}, \\mathbf{q}) \\rvert^2 \\delta(\\varepsilon_{n\\mathbf{k}} - \\varepsilon_{m\\mathbf{k}+\\mathbf{q}}), \u03c4 ~ n k \u2192 m k + q \u2212 1 \u200b = \u210f 2 \u03c0 \u200b \u2223 g n m \u200b ( k , q ) \u2223 2 \u03b4 ( \u03b5 n k \u200b \u2212 \u03b5 m k + q \u200b ) , where \u03b5 n k \\varepsilon_{n\\mathbf{k}} \u03b5 n k \u200b is the energy of state \u2223 n k \u27e9 \\mathinner{|n\\mathbf{k}\\rangle} \u2223 n k \u27e9 , and g n m ( k , q ) g_{nm}(\\mathbf{k}, \\mathbf{q}) g n m \u200b ( k , q ) is the matrix element for scattering from state \u2223 n k \u27e9 \\mathinner{|n\\mathbf{k}\\rangle} \u2223 n k \u27e9 into state \u2223 m k + q \u27e9 \\mathinner{|m\\mathbf{k} + \\mathbf{q}\\rangle} \u2223 m k + q \u27e9 . Info Note, this is the expression for elastic scattering. Inelastic scattering contains addition terms, as detailed in the elastic vs inelastic scattering section . The overall mode-dependent scattering rate is obtained by integrating the scattering rates over the full Brillouin zone. In this section, we report the matrix elements for each scattering mechanism implemented in AMSET. Information on calculating transport properties is given in the transport properties section . Summary of scattering rates \u00b6 Mechanism Code Requires Type Acoustic deformation potential scattering ADP n - and p -type deformation potential, elastic constant Elastic Piezoelectric scattering PIE high-frequency dielectric constant, elastic constant, piezoelectric coefficient ( e \\mathbf{e} e ) Elastic Polar optical phonon scattering POP polar optical phonon frequency, static and high-frequency dielectric constants Inelastic Ionized impurity scattering IMP static dielectric constant Elastic Acoustic deformation potential scattering \u00b6 The acoustic deformation potential matrix element is given by g n m a d ( k , q ) = k B T \u2211 G \u2260 \u2212 q [ D ~ n k : S ^ l c l \u03c1 + D ~ n k : S ^ t 1 c t 1 \u03c1 + D ~ n k : S ^ t 2 c t 2 \u03c1 ] \u27e8 m k + q \u2223 e i ( q + G ) \u22c5 r \u2223 n k \u27e9 , g_{nm}^\\mathrm{ad}(\\mathbf{k}, \\mathbf{q}) = \\sqrt{k_\\mathrm{B} T} \\sum_{\\mathbf{G} \\neq -\\mathbf{q}} \\left[ \\frac{\\mathbf{\\tilde{D}}_{n\\mathbf{k}} \\mathbin{:} \\mathbf{\\hat{S}}_l}{c_l\\sqrt{\\rho}} + \\frac{\\mathbf{\\tilde{D}}_{n\\mathbf{k}} \\mathbin{:} \\mathbf{\\hat{S}}_{t_1}}{c_{t_1}\\sqrt{\\rho}} + \\frac{\\mathbf{\\tilde{D}}_{n\\mathbf{k}} \\mathbin{:} \\mathbf{\\hat{S}}_{t_2}}{c_{t_2}\\sqrt{\\rho}} \\right] \\mathinner{\\langle m\\mathbf{k}+\\mathbf{q} \\left | e^{i(\\mathbf{q} + \\mathbf{G})\\cdot\\mathbf{r}} \\right | n\\mathbf{k} \\rangle}, g n m a d \u200b ( k , q ) = k B \u200b T \u200b G \ue020 = \u2212 q \u2211 \u200b [ c l \u200b \u03c1 \u200b D ~ n k \u200b : S ^ l \u200b \u200b + c t 1 \u200b \u200b \u03c1 \u200b D ~ n k \u200b : S ^ t 1 \u200b \u200b \u200b + c t 2 \u200b \u200b \u03c1 \u200b D ~ n k \u200b : S ^ t 2 \u200b \u200b \u200b ] \u27e8 m k + q \u2223 \u2223 \u2223 \u2223 \u200b e i ( q + G ) \u22c5 r \u2223 \u2223 \u2223 \u2223 \u200b n k \u27e9 , where D ~ n k = D n k + v n k \u2297 v n k \\mathbf{\\tilde{D}}_{n\\mathbf{k}} = \\mathbf{D}_{n\\mathbf{k}} + \\mathbf{v}_{n\\mathbf{k}} \\otimes \\mathbf{v}_{n\\mathbf{k}} D ~ n k \u200b = D n k \u200b + v n k \u200b \u2297 v n k \u200b in which D n k \\mathbf{D}_{n\\mathbf{k}} D n k \u200b is the rank 2 deformation potential tensor, S ^ = q ^ \u2297 u ^ \\mathbf{\\hat{S}} = \\mathbf{\\hat{q}}\\otimes\\mathbf{\\hat{u}} S ^ = q ^ \u200b \u2297 u ^ is the unit strain associated with an acoustic mode, u ^ \\mathbf{\\hat{u}} u ^ is the unit vector of phonon polarization, and the subscripts l l l , t 1 t_1 t 1 \u200b , and t 2 t_2 t 2 \u200b indicate properties belonging to the longitudinal and transverse modes. Abbreviation: APD Type: Elastic References: 3 , 2 , 1 Requires: deformation_potential , elastic_constant Piezoelectric scattering \u00b6 The piezoelectric differential scattering rate is given by g n m p i ( k , q ) = k B T \u2211 G \u2260 \u2212 q [ n ^ h : S ^ l c l \u03c1 + n ^ h : S ^ t 1 c t 1 \u03c1 + n ^ h : S ^ t 2 c t 2 \u03c1 ] \u27e8 m k + q \u2223 e i ( q + G ) \u22c5 r \u2223 n k \u27e9 \u2223 q + G \u2223 , g_{nm}^\\mathrm{pi}(\\mathbf{k}, \\mathbf{q}) = \\sqrt{k_\\mathrm{B} T} \\sum_{\\mathbf{G} \\neq -\\mathbf{q}} \\left[ \\frac{\\mathbf{\\hat{n}} \\mathbf{h} \\mathbin{:} \\mathbf{\\hat{S}}_l}{c_l\\sqrt{\\rho}} + \\frac{\\mathbf{\\hat{n}} \\mathbf{h} \\mathbin{:} \\mathbf{\\hat{S}}_{t_1}}{c_{t_1}\\sqrt{\\rho}} + \\frac{\\mathbf{\\hat{n}} \\mathbf{h} \\mathbin{:} \\mathbf{\\hat{S}}_{t_2}}{c_{t_2}\\sqrt{\\rho}} \\right ] \\frac{\\mathinner{\\langle m\\mathbf{k}+\\mathbf{q} \\left | e^{i(\\mathbf{q} + \\mathbf{G})\\cdot\\mathbf{r}} \\right | n\\mathbf{k} \\rangle}} {\\left | \\mathbf{q} + \\mathbf{G} \\right |}, g n m p i \u200b ( k , q ) = k B \u200b T \u200b G \ue020 = \u2212 q \u2211 \u200b [ c l \u200b \u03c1 \u200b n ^ h : S ^ l \u200b \u200b + c t 1 \u200b \u200b \u03c1 \u200b n ^ h : S ^ t 1 \u200b \u200b \u200b + c t 2 \u200b \u200b \u03c1 \u200b n ^ h : S ^ t 2 \u200b \u200b \u200b ] \u2223 q + G \u2223 \u27e8 m k + q \u2223 \u2223 \u2223 \u200b e i ( q + G ) \u22c5 r \u2223 \u2223 \u2223 \u200b n k \u27e9 \u200b , where h \\mathbf{h} h is the full piezoelectric stress tensor and n ^ = ( q + G ) / \u2223 q + G \u2223 \\mathbf{\\hat{n}} = (\\mathbf{q} + \\mathbf{G}) / \\left | \\mathbf{q} + \\mathbf{G} \\right | n ^ = ( q + G ) / \u2223 q + G \u2223 is a unit vector in the direction of scattering. Abbreviation: PIE Type: Elastic References: 1 Requires: piezoelectric_coefficient , static_dielectric Polar optical phonon scattering \u00b6 The polar optical phonon differential scattering rate is given by g n m p o ( k , q ) = [ \u210f \u03c9 p o 2 ] 1 / 2 \u2211 G \u2260 \u2212 q ( 1 n ^ \u22c5 \u03f5 \u221e \u22c5 n ^ \u2212 1 n ^ \u22c5 \u03f5 s \u22c5 n ^ ) 1 2 \u27e8 m k + q \u2223 e i ( q + G ) \u22c5 r \u2223 n k \u27e9 \u2223 q + G \u2223 , g_{nm}^\\mathrm{po}(\\mathbf{k}, \\mathbf{q}) = \\left [ \\frac{\\hbar \\omega_\\mathrm{po}}{2} \\right ] ^ {1/2} \\sum_{\\mathbf{G} \\neq -\\mathbf{q}} \\left (\\frac{1}{\\mathbf{\\hat{n}}\\cdot\\boldsymbol{\\epsilon}_\\infty\\cdot\\mathbf{\\hat{n}}} - \\frac{1}{\\mathbf{\\hat{n}}\\cdot\\boldsymbol{\\epsilon}_\\mathrm{s}\\cdot\\mathbf{\\hat{n}}}\\right) ^\\frac{1}{2} \\frac{\\mathinner{\\langle m\\mathbf{k}+\\mathbf{q} \\left | e^{i(\\mathbf{q} + \\mathbf{G})\\cdot\\mathbf{r}} \\right | n\\mathbf{k} \\rangle}} {\\left | \\mathbf{q} + \\mathbf{G} \\right |}, g n m p o \u200b ( k , q ) = [ 2 \u210f \u03c9 p o \u200b \u200b ] 1 / 2 G \ue020 = \u2212 q \u2211 \u200b ( n ^ \u22c5 \u03f5 \u221e \u200b \u22c5 n ^ 1 \u200b \u2212 n ^ \u22c5 \u03f5 s \u200b \u22c5 n ^ 1 \u200b ) 2 1 \u200b \u2223 q + G \u2223 \u27e8 m k + q \u2223 \u2223 \u2223 \u200b e i ( q + G ) \u22c5 r \u2223 \u2223 \u2223 \u200b n k \u27e9 \u200b , where \u03f5 s \\boldsymbol{\\epsilon}_\\mathrm{s} \u03f5 s \u200b and \u03f5 \u221e \\boldsymbol{\\epsilon}_\\infty \u03f5 \u221e \u200b are the static and high-frequency dielectric tensors and \u03c9 p o \\omega_\\mathrm{po} \u03c9 p o \u200b is the polar optical phonon frequency. To capture scattering from the full phonon band structure in a single phonon frequency, each phonon mode is weighted by the dipole moment it produces. Abbreviation: POP Type: Inelastic References: 5 , 6 , 1 Requires: pop_frequency , static_dielectric , high_frequency_dielectric Ionized impurity scattering \u00b6 The ionized impurity matrix element is given by g n m i i ( k , q ) = \u2211 G \u2260 \u2212 q n i i 1 / 2 Z e n ^ \u22c5 \u03f5 s \u22c5 n ^ \u27e8 m k + q \u2223 e i ( q + G ) \u22c5 r \u2223 n k \u27e9 \u2223 q + G \u2223 2 + \u03b2 2 , g_{nm}^\\mathrm{ii}(\\mathbf{k}, \\mathbf{q}) = \\sum_{\\mathbf{G} \\neq -\\mathbf{q}} \\frac{n_\\mathrm{ii}^{1/2} Z e }{\\mathbf{\\hat{n}} \\cdot \\boldsymbol{\\epsilon}_\\mathrm{s} \\cdot \\mathbf{\\hat{n}}} \\frac{\\mathinner{\\langle m\\mathbf{k}+\\mathbf{q} \\left | e^{i(\\mathbf{q} + \\mathbf{G})\\cdot\\mathbf{r}} \\right | n\\mathbf{k} \\rangle}} {\\left | \\mathbf{q} + \\mathbf{G} \\right | ^2 + \\beta^2}, g n m i i \u200b ( k , q ) = G \ue020 = \u2212 q \u2211 \u200b n ^ \u22c5 \u03f5 s \u200b \u22c5 n ^ n i i 1 / 2 \u200b Z e \u200b \u2223 q + G \u2223 2 + \u03b2 2 \u27e8 m k + q \u2223 \u2223 \u2223 \u200b e i ( q + G ) \u22c5 r \u2223 \u2223 \u2223 \u200b n k \u27e9 \u200b , where Z Z Z is the charge state of the impurity center, n i i n_\\mathrm{ii} n i i \u200b is the concentration of ionized impurities (i.e., n h o l e s + n e l e c t r o n s n_\\mathrm{holes} + n_\\mathrm{electrons} n h o l e s \u200b + n e l e c t r o n s \u200b ), and \u03b2 \\beta \u03b2 is the inverse screening length, defined as \u03b2 2 = e 2 \u03f5 s k B T \u222b d \u03b5 V \u2009 D ( \u03b5 ) f ( 1 \u2212 f ) , \\beta^2 = \\frac{e^2}{\\epsilon_\\mathrm{s} k_\\mathrm{B} T} \\int \\frac{\\mathrm{d}\\varepsilon}{V}\\,D(\\varepsilon) f(1-f), \u03b2 2 = \u03f5 s \u200b k B \u200b T e 2 \u200b \u222b V d \u03b5 \u200b D ( \u03b5 ) f ( 1 \u2212 f ) , where V V V is the unit cell volume, D D D is the density of states, and f f f is the Fermi\u2013Dirac distribution given in the transport properties section . Abbreviation: IMP Type: Elastic References: 4 , 1 Requires: static_dielectric Elastic vs inelastic scattering \u00b6 AMSET treats elastic and inelastic scattering mechanisms separately. Inelastic \u00b6 The differential scattering rate for inelastic processes is calculated as \u03c4 n k \u2192 m k + q \u2212 1 = 2 \u03c0 \u210f \u2223 g n m ( k , q ) \u2223 2 \u00d7 [ ( n p o + 1 \u2212 f m k + q ) \u03b4 ( \u03b5 n k \u2212 \u03b5 m k + q \u2212 \u210f \u03c9 p o ) ( n p o + f m k + q ) \u03b4 ( \u03b5 n k \u2212 \u03b5 m k + q + \u210f \u03c9 p o ) ] , \\begin{aligned} \\tau_{n\\mathbf{k}\\rightarrow m\\mathbf{k}+\\mathbf{q}}^{-1} = \\frac{2\\pi}{\\hbar} \\lvert g_{nm}(\\mathbf{k}, \\mathbf{q}) \\rvert^2 \\times [ &{} (n_\\mathrm{po} + 1 - f_{m\\mathbf{k} + \\mathbf{q}}) \\delta(\\varepsilon_{n\\mathbf{k}} - \\varepsilon_{m\\mathbf{k}+\\mathbf{q}} - \\hbar\\omega_\\mathrm{po}) \\\\ &{} (n_\\mathrm{po} + f_{m\\mathbf{k} + \\mathbf{q}}) \\delta(\\varepsilon_{n\\mathbf{k}} - \\varepsilon_{m\\mathbf{k}+\\mathbf{q}} + \\hbar\\omega_\\mathrm{po})], \\end{aligned} \u03c4 n k \u2192 m k + q \u2212 1 \u200b = \u210f 2 \u03c0 \u200b \u2223 g n m \u200b ( k , q ) \u2223 2 \u00d7 [ \u200b ( n p o \u200b + 1 \u2212 f m k + q \u200b ) \u03b4 ( \u03b5 n k \u200b \u2212 \u03b5 m k + q \u200b \u2212 \u210f \u03c9 p o \u200b ) ( n p o \u200b + f m k + q \u200b ) \u03b4 ( \u03b5 n k \u200b \u2212 \u03b5 m k + q \u200b + \u210f \u03c9 p o \u200b ) ] , \u200b where \u03c9 p o \\omega_\\mathrm{po} \u03c9 p o \u200b is an effective phonon frequency, n p o = 1 / [ exp \u2061 ( \u210f \u03c9 p o / k B T ) \u2212 1 ] n_\\mathrm{po} = 1 / [\\exp (\\hbar \\omega_\\mathrm{po} / k_\\mathrm{B} T) - 1] n p o \u200b = 1 / [ exp ( \u210f \u03c9 p o \u200b / k B \u200b T ) \u2212 1 ] denotes the Bose\u2013Einstein distribution of phonons, and the \u2212 \u210f \u03c9 p o -\\hbar \\omega_\\mathrm{po} \u2212 \u210f \u03c9 p o \u200b and + \u210f \u03c9 p o +\\hbar \\omega_\\mathrm{po} + \u210f \u03c9 p o \u200b terms correspond to scattering by phonon absorption and emission, respectively. The overall inelastic scattering rate for state \u2223 n k \u27e9 \\mathinner{|n\\mathbf{k}\\rangle} \u2223 n k \u27e9 is calculated as \u03c4 n k \u2212 1 = \u2211 m \u222b d 3 q \u03a9 \u03c4 n k \u2192 m k + q \u2212 1 \\tau^{-1}_{n\\mathbf{k}} = \\sum_m \\int \\frac{\\mathrm{d}^3q}{\\Omega} \\tau_{n\\mathbf{k}\\rightarrow m\\mathbf{k}+\\mathbf{q}}^{-1} \u03c4 n k \u2212 1 \u200b = m \u2211 \u200b \u222b \u03a9 d 3 q \u200b \u03c4 n k \u2192 m k + q \u2212 1 \u200b where \u03a9 \\Omega \u03a9 is the volume of the Brillouin zone. Elastic \u00b6 Elastic rates are calculated using the momentum relaxation time approximation (MRTA), given by \u03c4 ~ n k \u2212 1 = \u2211 m \u222b d 3 q \u03a9 [ 1 \u2212 v n k \u22c5 v m k + q \u2223 v n k \u2223 2 ] \u03c4 ~ n k \u2192 m k + q \u2212 1 \\tilde{\\tau}^{-1}_{n\\mathbf{k}} = \\sum_m \\int \\frac{\\mathrm{d}^3q}{\\Omega} \\left [ 1 - \\frac{\\mathbf{v}_{n\\mathbf{k}} \\cdot \\mathbf{v}_{m\\mathbf{k} + \\mathbf{q}}}{\\lvert \\mathbf{v}_{n\\mathbf{k}} \\rvert^2} \\right ] \\tilde{\\tau}_{n\\mathbf{k}\\rightarrow m\\mathbf{k}+\\mathbf{q}}^{-1} \u03c4 ~ n k \u2212 1 \u200b = m \u2211 \u200b \u222b \u03a9 d 3 q \u200b [ 1 \u2212 \u2223 v n k \u200b \u2223 2 v n k \u200b \u22c5 v m k + q \u200b \u200b ] \u03c4 ~ n k \u2192 m k + q \u2212 1 \u200b where \u03c4 ~ n k \u2192 m k + q \u2212 1 \\tilde{\\tau}_{n\\mathbf{k}\\rightarrow m\\mathbf{k}+\\mathbf{q}}^{-1} \u03c4 ~ n k \u2192 m k + q \u2212 1 \u200b is the elastic differential scattering rate defined at the top of this page and v n k \\mathbf{v}_{n\\mathbf{k}} v n k \u200b is the group velocity of state \u2223 n k \u27e9 \\mathinner{|n\\mathbf{k}\\rangle} \u2223 n k \u27e9 . Overlap integral \u00b6 In the Born approximation, the scattering rate equations depend on the wavefunction overlap \u27e8 m k + q \u2223 e i ( q + G ) \u22c5 r \u2223 n k \u27e9 \\mathinner{\\langle m\\mathbf{k}+\\mathbf{q} \\left | e^{i(\\mathbf{q} + \\mathbf{G})\\cdot\\mathbf{r}} \\right | n\\mathbf{k} \\rangle} \u27e8 m k + q \u2223 \u2223 \u2223 \u200b e i ( q + G ) \u22c5 r \u2223 \u2223 \u2223 \u200b n k \u27e9 . AMSET uses pawpyseed to obtain wavefunction coefficients including PAW core regions from the pseudo wavefunction coefficients written by VASP. The wavefunctions coefficient are linearly interpolated onto the mesh used to calculate scattering rates. Brillouin zone integration \u00b6 All scattering rates depend on the Dirac delta function \u03b4 \\delta \u03b4 , which imposes conservation of energy. Due to finite k-point sampling and numerical noise, it is unlikely that this condition will ever be satisfied exactly. Furthermore, many scattering rates have a 1 / \u2223 q \u2223 2 1 / \\lvert\\mathbf{q}\\rvert ^2 1 / \u2223 q \u2223 2 dependence which requires an extremely dense k-point mesh to achieve convergence. To account for this, AMSET employs a modified tetrahedron integration scheme. AMSET first identifies a constant energy surface by computing tetrahedral cross sections using the tetrahedron method. Next, the constant energy surface is resampled using an ultra-fine mesh of k-points generated using the quadpy numerical integration package. The wavefunction coefficients and group velocities are reinterpolated into the ultra-fine mesh using linear interpolation and the matrix elements are calculated directly. This methodology allows for significantly faster convergence than the regular tetrahedron method. The methodology for combining rates from multiple scattering mechanisms is given in the transport properties section . Rode, D. L. Low-field electron transport. Semiconductors and semimetals 10 , (Elsevier, 1975). \u21a9 \u21a9 \u21a9 \u21a9 Shockley, W. & others. Electrons and holes in semiconductors: with applications to transistor electronics. (van Nostrand New York, 1950). \u21a9 Bardeen, J. & Shockley, W. Deformation potentials and mobilities in non-polar crystals. Phys. Rev. 80 , 72-80 (1950). \u21a9 Dingle, R. B. XCIV. Scattering of electrons and holes by charged donors and acceptors in semiconductors. London, Edinburgh, Dublin Philos. Mag. J. Sci. 46 , 831-840 (1955). \u21a9 Fr\u00f6hlich, H. Electrons in lattice fields. Adv. Phys. 3 , 325\u2013361 (1954). \u21a9 Conwell, E. M. High Field Transport in Semiconductors. Academic Press, New York (1967). \u21a9","title":"Scattering Rates"},{"location":"scattering/#calculating-scattering-rates","text":"AMSET calculates mode dependent scattering rates within the Born approximation using common materials parameters. The differential scattering rate from state \u2223 n k \u27e9 \\mathinner{|n\\mathbf{k}\\rangle} \u2223 n k \u27e9 to state \u2223 m k + q \u27e9 \\mathinner{|m\\mathbf{k} + \\mathbf{q}\\rangle} \u2223 m k + q \u27e9 is calculated using Fermi's golden rule as \u03c4 ~ n k \u2192 m k + q \u2212 1 = 2 \u03c0 \u210f \u2223 g n m ( k , q ) \u2223 2 \u03b4 ( \u03b5 n k \u2212 \u03b5 m k + q ) , \\tilde{\\tau}_{n\\mathbf{k}\\rightarrow m\\mathbf{k}+\\mathbf{q}}^{-1} = \\frac{2\\pi}{\\hbar} \\lvert g_{nm}(\\mathbf{k}, \\mathbf{q}) \\rvert^2 \\delta(\\varepsilon_{n\\mathbf{k}} - \\varepsilon_{m\\mathbf{k}+\\mathbf{q}}), \u03c4 ~ n k \u2192 m k + q \u2212 1 \u200b = \u210f 2 \u03c0 \u200b \u2223 g n m \u200b ( k , q ) \u2223 2 \u03b4 ( \u03b5 n k \u200b \u2212 \u03b5 m k + q \u200b ) , where \u03b5 n k \\varepsilon_{n\\mathbf{k}} \u03b5 n k \u200b is the energy of state \u2223 n k \u27e9 \\mathinner{|n\\mathbf{k}\\rangle} \u2223 n k \u27e9 , and g n m ( k , q ) g_{nm}(\\mathbf{k}, \\mathbf{q}) g n m \u200b ( k , q ) is the matrix element for scattering from state \u2223 n k \u27e9 \\mathinner{|n\\mathbf{k}\\rangle} \u2223 n k \u27e9 into state \u2223 m k + q \u27e9 \\mathinner{|m\\mathbf{k} + \\mathbf{q}\\rangle} \u2223 m k + q \u27e9 . Info Note, this is the expression for elastic scattering. Inelastic scattering contains addition terms, as detailed in the elastic vs inelastic scattering section . The overall mode-dependent scattering rate is obtained by integrating the scattering rates over the full Brillouin zone. In this section, we report the matrix elements for each scattering mechanism implemented in AMSET. Information on calculating transport properties is given in the transport properties section .","title":"Calculating scattering rates"},{"location":"scattering/#summary-of-scattering-rates","text":"Mechanism Code Requires Type Acoustic deformation potential scattering ADP n - and p -type deformation potential, elastic constant Elastic Piezoelectric scattering PIE high-frequency dielectric constant, elastic constant, piezoelectric coefficient ( e \\mathbf{e} e ) Elastic Polar optical phonon scattering POP polar optical phonon frequency, static and high-frequency dielectric constants Inelastic Ionized impurity scattering IMP static dielectric constant Elastic","title":"Summary of scattering rates"},{"location":"scattering/#acoustic-deformation-potential-scattering","text":"The acoustic deformation potential matrix element is given by g n m a d ( k , q ) = k B T \u2211 G \u2260 \u2212 q [ D ~ n k : S ^ l c l \u03c1 + D ~ n k : S ^ t 1 c t 1 \u03c1 + D ~ n k : S ^ t 2 c t 2 \u03c1 ] \u27e8 m k + q \u2223 e i ( q + G ) \u22c5 r \u2223 n k \u27e9 , g_{nm}^\\mathrm{ad}(\\mathbf{k}, \\mathbf{q}) = \\sqrt{k_\\mathrm{B} T} \\sum_{\\mathbf{G} \\neq -\\mathbf{q}} \\left[ \\frac{\\mathbf{\\tilde{D}}_{n\\mathbf{k}} \\mathbin{:} \\mathbf{\\hat{S}}_l}{c_l\\sqrt{\\rho}} + \\frac{\\mathbf{\\tilde{D}}_{n\\mathbf{k}} \\mathbin{:} \\mathbf{\\hat{S}}_{t_1}}{c_{t_1}\\sqrt{\\rho}} + \\frac{\\mathbf{\\tilde{D}}_{n\\mathbf{k}} \\mathbin{:} \\mathbf{\\hat{S}}_{t_2}}{c_{t_2}\\sqrt{\\rho}} \\right] \\mathinner{\\langle m\\mathbf{k}+\\mathbf{q} \\left | e^{i(\\mathbf{q} + \\mathbf{G})\\cdot\\mathbf{r}} \\right | n\\mathbf{k} \\rangle}, g n m a d \u200b ( k , q ) = k B \u200b T \u200b G \ue020 = \u2212 q \u2211 \u200b [ c l \u200b \u03c1 \u200b D ~ n k \u200b : S ^ l \u200b \u200b + c t 1 \u200b \u200b \u03c1 \u200b D ~ n k \u200b : S ^ t 1 \u200b \u200b \u200b + c t 2 \u200b \u200b \u03c1 \u200b D ~ n k \u200b : S ^ t 2 \u200b \u200b \u200b ] \u27e8 m k + q \u2223 \u2223 \u2223 \u2223 \u200b e i ( q + G ) \u22c5 r \u2223 \u2223 \u2223 \u2223 \u200b n k \u27e9 , where D ~ n k = D n k + v n k \u2297 v n k \\mathbf{\\tilde{D}}_{n\\mathbf{k}} = \\mathbf{D}_{n\\mathbf{k}} + \\mathbf{v}_{n\\mathbf{k}} \\otimes \\mathbf{v}_{n\\mathbf{k}} D ~ n k \u200b = D n k \u200b + v n k \u200b \u2297 v n k \u200b in which D n k \\mathbf{D}_{n\\mathbf{k}} D n k \u200b is the rank 2 deformation potential tensor, S ^ = q ^ \u2297 u ^ \\mathbf{\\hat{S}} = \\mathbf{\\hat{q}}\\otimes\\mathbf{\\hat{u}} S ^ = q ^ \u200b \u2297 u ^ is the unit strain associated with an acoustic mode, u ^ \\mathbf{\\hat{u}} u ^ is the unit vector of phonon polarization, and the subscripts l l l , t 1 t_1 t 1 \u200b , and t 2 t_2 t 2 \u200b indicate properties belonging to the longitudinal and transverse modes. Abbreviation: APD Type: Elastic References: 3 , 2 , 1 Requires: deformation_potential , elastic_constant","title":"Acoustic deformation potential scattering"},{"location":"scattering/#piezoelectric-scattering","text":"The piezoelectric differential scattering rate is given by g n m p i ( k , q ) = k B T \u2211 G \u2260 \u2212 q [ n ^ h : S ^ l c l \u03c1 + n ^ h : S ^ t 1 c t 1 \u03c1 + n ^ h : S ^ t 2 c t 2 \u03c1 ] \u27e8 m k + q \u2223 e i ( q + G ) \u22c5 r \u2223 n k \u27e9 \u2223 q + G \u2223 , g_{nm}^\\mathrm{pi}(\\mathbf{k}, \\mathbf{q}) = \\sqrt{k_\\mathrm{B} T} \\sum_{\\mathbf{G} \\neq -\\mathbf{q}} \\left[ \\frac{\\mathbf{\\hat{n}} \\mathbf{h} \\mathbin{:} \\mathbf{\\hat{S}}_l}{c_l\\sqrt{\\rho}} + \\frac{\\mathbf{\\hat{n}} \\mathbf{h} \\mathbin{:} \\mathbf{\\hat{S}}_{t_1}}{c_{t_1}\\sqrt{\\rho}} + \\frac{\\mathbf{\\hat{n}} \\mathbf{h} \\mathbin{:} \\mathbf{\\hat{S}}_{t_2}}{c_{t_2}\\sqrt{\\rho}} \\right ] \\frac{\\mathinner{\\langle m\\mathbf{k}+\\mathbf{q} \\left | e^{i(\\mathbf{q} + \\mathbf{G})\\cdot\\mathbf{r}} \\right | n\\mathbf{k} \\rangle}} {\\left | \\mathbf{q} + \\mathbf{G} \\right |}, g n m p i \u200b ( k , q ) = k B \u200b T \u200b G \ue020 = \u2212 q \u2211 \u200b [ c l \u200b \u03c1 \u200b n ^ h : S ^ l \u200b \u200b + c t 1 \u200b \u200b \u03c1 \u200b n ^ h : S ^ t 1 \u200b \u200b \u200b + c t 2 \u200b \u200b \u03c1 \u200b n ^ h : S ^ t 2 \u200b \u200b \u200b ] \u2223 q + G \u2223 \u27e8 m k + q \u2223 \u2223 \u2223 \u200b e i ( q + G ) \u22c5 r \u2223 \u2223 \u2223 \u200b n k \u27e9 \u200b , where h \\mathbf{h} h is the full piezoelectric stress tensor and n ^ = ( q + G ) / \u2223 q + G \u2223 \\mathbf{\\hat{n}} = (\\mathbf{q} + \\mathbf{G}) / \\left | \\mathbf{q} + \\mathbf{G} \\right | n ^ = ( q + G ) / \u2223 q + G \u2223 is a unit vector in the direction of scattering. Abbreviation: PIE Type: Elastic References: 1 Requires: piezoelectric_coefficient , static_dielectric","title":"Piezoelectric scattering"},{"location":"scattering/#polar-optical-phonon-scattering","text":"The polar optical phonon differential scattering rate is given by g n m p o ( k , q ) = [ \u210f \u03c9 p o 2 ] 1 / 2 \u2211 G \u2260 \u2212 q ( 1 n ^ \u22c5 \u03f5 \u221e \u22c5 n ^ \u2212 1 n ^ \u22c5 \u03f5 s \u22c5 n ^ ) 1 2 \u27e8 m k + q \u2223 e i ( q + G ) \u22c5 r \u2223 n k \u27e9 \u2223 q + G \u2223 , g_{nm}^\\mathrm{po}(\\mathbf{k}, \\mathbf{q}) = \\left [ \\frac{\\hbar \\omega_\\mathrm{po}}{2} \\right ] ^ {1/2} \\sum_{\\mathbf{G} \\neq -\\mathbf{q}} \\left (\\frac{1}{\\mathbf{\\hat{n}}\\cdot\\boldsymbol{\\epsilon}_\\infty\\cdot\\mathbf{\\hat{n}}} - \\frac{1}{\\mathbf{\\hat{n}}\\cdot\\boldsymbol{\\epsilon}_\\mathrm{s}\\cdot\\mathbf{\\hat{n}}}\\right) ^\\frac{1}{2} \\frac{\\mathinner{\\langle m\\mathbf{k}+\\mathbf{q} \\left | e^{i(\\mathbf{q} + \\mathbf{G})\\cdot\\mathbf{r}} \\right | n\\mathbf{k} \\rangle}} {\\left | \\mathbf{q} + \\mathbf{G} \\right |}, g n m p o \u200b ( k , q ) = [ 2 \u210f \u03c9 p o \u200b \u200b ] 1 / 2 G \ue020 = \u2212 q \u2211 \u200b ( n ^ \u22c5 \u03f5 \u221e \u200b \u22c5 n ^ 1 \u200b \u2212 n ^ \u22c5 \u03f5 s \u200b \u22c5 n ^ 1 \u200b ) 2 1 \u200b \u2223 q + G \u2223 \u27e8 m k + q \u2223 \u2223 \u2223 \u200b e i ( q + G ) \u22c5 r \u2223 \u2223 \u2223 \u200b n k \u27e9 \u200b , where \u03f5 s \\boldsymbol{\\epsilon}_\\mathrm{s} \u03f5 s \u200b and \u03f5 \u221e \\boldsymbol{\\epsilon}_\\infty \u03f5 \u221e \u200b are the static and high-frequency dielectric tensors and \u03c9 p o \\omega_\\mathrm{po} \u03c9 p o \u200b is the polar optical phonon frequency. To capture scattering from the full phonon band structure in a single phonon frequency, each phonon mode is weighted by the dipole moment it produces. Abbreviation: POP Type: Inelastic References: 5 , 6 , 1 Requires: pop_frequency , static_dielectric , high_frequency_dielectric","title":"Polar optical phonon scattering"},{"location":"scattering/#ionized-impurity-scattering","text":"The ionized impurity matrix element is given by g n m i i ( k , q ) = \u2211 G \u2260 \u2212 q n i i 1 / 2 Z e n ^ \u22c5 \u03f5 s \u22c5 n ^ \u27e8 m k + q \u2223 e i ( q + G ) \u22c5 r \u2223 n k \u27e9 \u2223 q + G \u2223 2 + \u03b2 2 , g_{nm}^\\mathrm{ii}(\\mathbf{k}, \\mathbf{q}) = \\sum_{\\mathbf{G} \\neq -\\mathbf{q}} \\frac{n_\\mathrm{ii}^{1/2} Z e }{\\mathbf{\\hat{n}} \\cdot \\boldsymbol{\\epsilon}_\\mathrm{s} \\cdot \\mathbf{\\hat{n}}} \\frac{\\mathinner{\\langle m\\mathbf{k}+\\mathbf{q} \\left | e^{i(\\mathbf{q} + \\mathbf{G})\\cdot\\mathbf{r}} \\right | n\\mathbf{k} \\rangle}} {\\left | \\mathbf{q} + \\mathbf{G} \\right | ^2 + \\beta^2}, g n m i i \u200b ( k , q ) = G \ue020 = \u2212 q \u2211 \u200b n ^ \u22c5 \u03f5 s \u200b \u22c5 n ^ n i i 1 / 2 \u200b Z e \u200b \u2223 q + G \u2223 2 + \u03b2 2 \u27e8 m k + q \u2223 \u2223 \u2223 \u200b e i ( q + G ) \u22c5 r \u2223 \u2223 \u2223 \u200b n k \u27e9 \u200b , where Z Z Z is the charge state of the impurity center, n i i n_\\mathrm{ii} n i i \u200b is the concentration of ionized impurities (i.e., n h o l e s + n e l e c t r o n s n_\\mathrm{holes} + n_\\mathrm{electrons} n h o l e s \u200b + n e l e c t r o n s \u200b ), and \u03b2 \\beta \u03b2 is the inverse screening length, defined as \u03b2 2 = e 2 \u03f5 s k B T \u222b d \u03b5 V \u2009 D ( \u03b5 ) f ( 1 \u2212 f ) , \\beta^2 = \\frac{e^2}{\\epsilon_\\mathrm{s} k_\\mathrm{B} T} \\int \\frac{\\mathrm{d}\\varepsilon}{V}\\,D(\\varepsilon) f(1-f), \u03b2 2 = \u03f5 s \u200b k B \u200b T e 2 \u200b \u222b V d \u03b5 \u200b D ( \u03b5 ) f ( 1 \u2212 f ) , where V V V is the unit cell volume, D D D is the density of states, and f f f is the Fermi\u2013Dirac distribution given in the transport properties section . Abbreviation: IMP Type: Elastic References: 4 , 1 Requires: static_dielectric","title":"Ionized impurity scattering"},{"location":"scattering/#elastic-vs-inelastic-scattering","text":"AMSET treats elastic and inelastic scattering mechanisms separately.","title":"Elastic vs inelastic scattering"},{"location":"scattering/#inelastic","text":"The differential scattering rate for inelastic processes is calculated as \u03c4 n k \u2192 m k + q \u2212 1 = 2 \u03c0 \u210f \u2223 g n m ( k , q ) \u2223 2 \u00d7 [ ( n p o + 1 \u2212 f m k + q ) \u03b4 ( \u03b5 n k \u2212 \u03b5 m k + q \u2212 \u210f \u03c9 p o ) ( n p o + f m k + q ) \u03b4 ( \u03b5 n k \u2212 \u03b5 m k + q + \u210f \u03c9 p o ) ] , \\begin{aligned} \\tau_{n\\mathbf{k}\\rightarrow m\\mathbf{k}+\\mathbf{q}}^{-1} = \\frac{2\\pi}{\\hbar} \\lvert g_{nm}(\\mathbf{k}, \\mathbf{q}) \\rvert^2 \\times [ &{} (n_\\mathrm{po} + 1 - f_{m\\mathbf{k} + \\mathbf{q}}) \\delta(\\varepsilon_{n\\mathbf{k}} - \\varepsilon_{m\\mathbf{k}+\\mathbf{q}} - \\hbar\\omega_\\mathrm{po}) \\\\ &{} (n_\\mathrm{po} + f_{m\\mathbf{k} + \\mathbf{q}}) \\delta(\\varepsilon_{n\\mathbf{k}} - \\varepsilon_{m\\mathbf{k}+\\mathbf{q}} + \\hbar\\omega_\\mathrm{po})], \\end{aligned} \u03c4 n k \u2192 m k + q \u2212 1 \u200b = \u210f 2 \u03c0 \u200b \u2223 g n m \u200b ( k , q ) \u2223 2 \u00d7 [ \u200b ( n p o \u200b + 1 \u2212 f m k + q \u200b ) \u03b4 ( \u03b5 n k \u200b \u2212 \u03b5 m k + q \u200b \u2212 \u210f \u03c9 p o \u200b ) ( n p o \u200b + f m k + q \u200b ) \u03b4 ( \u03b5 n k \u200b \u2212 \u03b5 m k + q \u200b + \u210f \u03c9 p o \u200b ) ] , \u200b where \u03c9 p o \\omega_\\mathrm{po} \u03c9 p o \u200b is an effective phonon frequency, n p o = 1 / [ exp \u2061 ( \u210f \u03c9 p o / k B T ) \u2212 1 ] n_\\mathrm{po} = 1 / [\\exp (\\hbar \\omega_\\mathrm{po} / k_\\mathrm{B} T) - 1] n p o \u200b = 1 / [ exp ( \u210f \u03c9 p o \u200b / k B \u200b T ) \u2212 1 ] denotes the Bose\u2013Einstein distribution of phonons, and the \u2212 \u210f \u03c9 p o -\\hbar \\omega_\\mathrm{po} \u2212 \u210f \u03c9 p o \u200b and + \u210f \u03c9 p o +\\hbar \\omega_\\mathrm{po} + \u210f \u03c9 p o \u200b terms correspond to scattering by phonon absorption and emission, respectively. The overall inelastic scattering rate for state \u2223 n k \u27e9 \\mathinner{|n\\mathbf{k}\\rangle} \u2223 n k \u27e9 is calculated as \u03c4 n k \u2212 1 = \u2211 m \u222b d 3 q \u03a9 \u03c4 n k \u2192 m k + q \u2212 1 \\tau^{-1}_{n\\mathbf{k}} = \\sum_m \\int \\frac{\\mathrm{d}^3q}{\\Omega} \\tau_{n\\mathbf{k}\\rightarrow m\\mathbf{k}+\\mathbf{q}}^{-1} \u03c4 n k \u2212 1 \u200b = m \u2211 \u200b \u222b \u03a9 d 3 q \u200b \u03c4 n k \u2192 m k + q \u2212 1 \u200b where \u03a9 \\Omega \u03a9 is the volume of the Brillouin zone.","title":"Inelastic"},{"location":"scattering/#elastic","text":"Elastic rates are calculated using the momentum relaxation time approximation (MRTA), given by \u03c4 ~ n k \u2212 1 = \u2211 m \u222b d 3 q \u03a9 [ 1 \u2212 v n k \u22c5 v m k + q \u2223 v n k \u2223 2 ] \u03c4 ~ n k \u2192 m k + q \u2212 1 \\tilde{\\tau}^{-1}_{n\\mathbf{k}} = \\sum_m \\int \\frac{\\mathrm{d}^3q}{\\Omega} \\left [ 1 - \\frac{\\mathbf{v}_{n\\mathbf{k}} \\cdot \\mathbf{v}_{m\\mathbf{k} + \\mathbf{q}}}{\\lvert \\mathbf{v}_{n\\mathbf{k}} \\rvert^2} \\right ] \\tilde{\\tau}_{n\\mathbf{k}\\rightarrow m\\mathbf{k}+\\mathbf{q}}^{-1} \u03c4 ~ n k \u2212 1 \u200b = m \u2211 \u200b \u222b \u03a9 d 3 q \u200b [ 1 \u2212 \u2223 v n k \u200b \u2223 2 v n k \u200b \u22c5 v m k + q \u200b \u200b ] \u03c4 ~ n k \u2192 m k + q \u2212 1 \u200b where \u03c4 ~ n k \u2192 m k + q \u2212 1 \\tilde{\\tau}_{n\\mathbf{k}\\rightarrow m\\mathbf{k}+\\mathbf{q}}^{-1} \u03c4 ~ n k \u2192 m k + q \u2212 1 \u200b is the elastic differential scattering rate defined at the top of this page and v n k \\mathbf{v}_{n\\mathbf{k}} v n k \u200b is the group velocity of state \u2223 n k \u27e9 \\mathinner{|n\\mathbf{k}\\rangle} \u2223 n k \u27e9 .","title":"Elastic"},{"location":"scattering/#overlap-integral","text":"In the Born approximation, the scattering rate equations depend on the wavefunction overlap \u27e8 m k + q \u2223 e i ( q + G ) \u22c5 r \u2223 n k \u27e9 \\mathinner{\\langle m\\mathbf{k}+\\mathbf{q} \\left | e^{i(\\mathbf{q} + \\mathbf{G})\\cdot\\mathbf{r}} \\right | n\\mathbf{k} \\rangle} \u27e8 m k + q \u2223 \u2223 \u2223 \u200b e i ( q + G ) \u22c5 r \u2223 \u2223 \u2223 \u200b n k \u27e9 . AMSET uses pawpyseed to obtain wavefunction coefficients including PAW core regions from the pseudo wavefunction coefficients written by VASP. The wavefunctions coefficient are linearly interpolated onto the mesh used to calculate scattering rates.","title":"Overlap integral"},{"location":"scattering/#brillouin-zone-integration","text":"All scattering rates depend on the Dirac delta function \u03b4 \\delta \u03b4 , which imposes conservation of energy. Due to finite k-point sampling and numerical noise, it is unlikely that this condition will ever be satisfied exactly. Furthermore, many scattering rates have a 1 / \u2223 q \u2223 2 1 / \\lvert\\mathbf{q}\\rvert ^2 1 / \u2223 q \u2223 2 dependence which requires an extremely dense k-point mesh to achieve convergence. To account for this, AMSET employs a modified tetrahedron integration scheme. AMSET first identifies a constant energy surface by computing tetrahedral cross sections using the tetrahedron method. Next, the constant energy surface is resampled using an ultra-fine mesh of k-points generated using the quadpy numerical integration package. The wavefunction coefficients and group velocities are reinterpolated into the ultra-fine mesh using linear interpolation and the matrix elements are calculated directly. This methodology allows for significantly faster convergence than the regular tetrahedron method. The methodology for combining rates from multiple scattering mechanisms is given in the transport properties section . Rode, D. L. Low-field electron transport. Semiconductors and semimetals 10 , (Elsevier, 1975). \u21a9 \u21a9 \u21a9 \u21a9 Shockley, W. & others. Electrons and holes in semiconductors: with applications to transistor electronics. (van Nostrand New York, 1950). \u21a9 Bardeen, J. & Shockley, W. Deformation potentials and mobilities in non-polar crystals. Phys. Rev. 80 , 72-80 (1950). \u21a9 Dingle, R. B. XCIV. Scattering of electrons and holes by charged donors and acceptors in semiconductors. London, Edinburgh, Dublin Philos. Mag. J. Sci. 46 , 831-840 (1955). \u21a9 Fr\u00f6hlich, H. Electrons in lattice fields. Adv. Phys. 3 , 325\u2013361 (1954). \u21a9 Conwell, E. M. High Field Transport in Semiconductors. Academic Press, New York (1967). \u21a9","title":"Brillouin zone integration"},{"location":"settings/","text":".katex img { display: block; position: absolute; width: 100%; height: inherit; } Settings \u00b6 Whether using AMSET via the command-line or python API, the primary controls are contained in the settings file or dictionary. An example AMSET settings file is given here . The settings are grouped into sections. The description for each section and settings parameter is given below. All settings are also controllable via command-line flags. The corresponding command-line interface options are also detailed below. Any settings specified via the command-line will override those in the settings file. General settings \u00b6 These settings control the AMSET run, including interpolation density and temperature/doping ranges. doping \u00b6 Command-line option: -d, --doping Controls which doping levels (carrier concentrations) to calculate. Concentrations given with the unit cm \u20133 . Can be specified directly as a comma separated list, e.g.: 1E13 , 1E14 , 1E15 , 1E16 , 1E17 , 1E18 , 1E19 , 1E20 Alternatively, ranges can be specified using the syntax start:stop:num_steps . For example, the same doping concentrations as above can be written:: 1E13 : 1E20 : 8 Negative concentrations indicate electrons ( n -type doping), positive concentrations indicate holes ( p -type doping). Default: ['1.e15', '1.e16', '1.e17', '1.e18', '1.e19', '1.e20', '-1.e15', '-1.e16', '-1.e17', '-1.e18', '-1.e19', '-1.e20'] temperatures \u00b6 Command-line option: -t, --temperatures Controls which temperatures to calculate. Temperatures given in Kelvin. Can be specified directly as a comma separated list, e.g.:: 300 , 400 , 500 , 600 , 700 , 800 , 900 , 1000 Alternatively, ranges can be specified using the syntax start:stop:num_steps , For example, the same temperature range as above can be written:: 300 : 1000 : 8 Default: [300] interpolation_factor \u00b6 Command-line option: -i, --interpolation-factor Interpolation factor controlling the interpolation density. Larger numbers indicate greater density. The number of k-points in the interpolated band structure will be roughly equal to interpolation_factor times the number of k-points in the DFT calculation. This is the primary option for controlling the accuracy of the calculated scattering rates. Transport properties should be converged with respect to this parameter. Default: 10 scattering_type \u00b6 Command-line option: -s, --scattering-type Which scattering mechanisms to calculate. If set to auto , the scattering mechanisms will automatically be determined based on the specified material parameters. Alternatively, a comma separated list of scattering mechanism can be specified. Options include: ACD (acoustic deformation potential scattering) IMP (ionized impurity scattering) PIE (piezoelectric scattering) POP (polar optical phonon scattering) CRT (constant relaxation time) MFP (mean free path scattering) For example, ACD,IMP,POP . The scattering mechanism will only be calculated if all the required material parameters for that mechanism are set. See the scattering section <scattering> _ of the documentation for more details. Default: auto wavefunction_coefficients \u00b6 Command-line option: -w, --wavefunction-coefficients Path to wavefunction coefficients file. The coefficients can be extracted from a VASP WAVECAR using the command: amset wave This command also requires the vasprun.xml to be in the same folder. Default: wavefunction.h5 use_projections \u00b6 Command-line option: --use-projections Use projections to calculate wavefunction overlap. This can often result in very poor performance, and so is not recommended . In order to use projections, the VASP calculation must be performed with LORBIT = 11 . Default: False scissor \u00b6 Command-line option: -s, --scissor The amount to scissor the band gap, in eV. Positive values indicate band gap opening, negative values indicate band gap narrowing. Has no effect for metallic systems. bandgap \u00b6 Command-line option: -b, --bandgap Set the band gap to this value, in eV. Will automatically determine and apply the correct band gap scissor for the specified band gap. Cannot be used in combination with the scissor option. Has no effect for metallic systems. zero_weighted_kpoints \u00b6 Command-line option: -z, --zero-weighted-kpoints How to handle \"zero-weighted\" k-points if they are present in the calculation. Options are: keep: Keep zero-weighted k-points in the band structure. drop: Drop zero-weighted k-points, keeping only the weighted k-points. prefer: Drop weighted-kpoints if zero-weighted k-points are present in the calculation (useful for cheap hybrid calculations). free_carrier_screening \u00b6 Command-line option: --free-carrier-screening Whether free carriers will screen polar optical phonon and piezoelectric scattering rates. This modifies the matrix elements from a 1 \u2223 q + G \u2223 \\frac{1}{\\left | \\mathbf{q} + \\mathbf{G} \\right |} \u2223 q + G \u2223 1 \u200b dependence to a 1 \u2223 q + G \u2223 + \u03b2 \u221e \\frac{1}{\\left | \\mathbf{q} + \\mathbf{G} \\right | + \\beta_\\infty} \u2223 q + G \u2223 + \u03b2 \u221e \u200b 1 \u200b dependence, where \u03b2 \u221e \\beta_\\infty \u03b2 \u221e \u200b is the inverse screening length that depends on the temperature, carrier concentration, and high-frequency dielectric constant. This can result in a large reduction in the scattering rates at high carrier concentrations. Default: False Material settings \u00b6 These settings control the materials properties required to calculate the scattering rates. high_frequency_dielectric \u00b6 Command-line option: --high-frequency-dielectric The high-frequency dielectric constant, in units of \u03f5 0 \\epsilon_0 \u03f5 0 \u200b . Can be given as a 3x3 tensor or a single isotropic value. Required for: POP, PIE static_dielectric \u00b6 Command-line option: --static-dielectric The static dielectric constant, in units of \u03f5 0 \\epsilon_0 \u03f5 0 \u200b . Can be given as a 3x3 tensor or a single isotropic value. Required for: IMP, POP elastic_constant \u00b6 Command-line option: --elastic-constant The elastic constants as the full 3x3x3x3 tensor or 6x6 Voigt form, in GPa. Alteratively, a single averaged value can be given (not recommended). Required for: ACD, PIE deformation_potential \u00b6 Command-line option: --deformation-potential Path to file containing deformation potentials for all bands, generated using amset deform read . Alternatively, Can be given as a comma separated list of two deformation potentials for the VBM and CBM, respectively in eV, e.g.: 8.6 , 7.4 Or a single value to use for all bands in metals. Required for: ACD piezoelectric_constant \u00b6 command-line option: --piezoelectric-constant The piezoelectric constants ( e \\mathbf{e} e ) in C/m 2 given as either the full 3x3x3 tensor or the 3x6 Voigt form. Required for: PIE acceptor_charge \u00b6 Command-line option: --acceptor-charge The charge of acceptor defects, in units of electron charge. Required for: IMP Default: 1 donor_charge \u00b6 Command-line option: --donor-charge The charge of donor defects, in units of electron charge. Required for: IMP Default: 1 pop_frequency \u00b6 Command-line option: --pop-frequency The polar optical phonon frequency, in THz. Generally, it is ok to take the highest optical phonon frequency at the Gamma point. Required for: POP mean_free_path \u00b6 Command-line option: --mean-free-path Basic version of boundary scattering in which the scattering rate is set to v g / L v_g / L v g \u200b / L , where v g v_g v g \u200b is the group velocity and L L L is the mean free path in nm. Required for: MFP constant_relaxation_time \u00b6 Command-line option: --constant-relaxation-time A constant relaxation time to use as the minimum relaxation time for all k-points. It is not recommended to use this option in conjunction with any other scattering rates. Instead, this should be used to compare against results calculated in the constant relaxation time approximation. Required for: CRT Performance settings \u00b6 These settings control the speed and accuracy of calculated properties. In general the defaults should give converged values. energy_cutoff \u00b6 Command-line option: --energy-cutoff The energy cut-off used to determine which bands to include in the interpolation and scattering rate calculation, in eV. Default: 1.5 fd_tol \u00b6 Command-line option: --fd-tol The Fermi\u2013Dirac derivative tolerance that controls which k-points to calculate the scattering for. Given as a percentage from 0 to 1. Larger values indicate that the fewer k-points will be calculated, smaller values indicate a larger portion of the Brillouin zone will be calculated. Default: 0.05 dos_estep \u00b6 Command-line option: --dos-estep The energy step for the calculated density of states and transport density of states, in eV. Controls the accuracy of determining the position of the Fermi level and transport properties. Smaller is better but can quickly get more expensive. Default: 0.01 symprec \u00b6 Command-line option: --symprec The symmetry finding tolerance, in \u00c5. Default: 0.01 nworkers \u00b6 Command-line option: --nworkers Number of processors to use. -1 indicates to use all available processors. When using multiprocessing it is recommended to run export OMP_NUM_THREADS=1 before running amset. Default: -1 cache_wavefunction \u00b6 Command-line option: --cache-wavefunction Cache interpolated wavefunction coefficients. This means that the coefficients for each band and k-point on the Fourier interpolated k-point mesh are only calculated once. While this can yield a significant speed-up, it also massively increases memory requirements, especially if using a low value of fd_tol , or if the system contains very flat bands. If memory issues occur, it is recommended to set cache_wavefunction to False . Default: True Output settings \u00b6 These settings control the output files and logging. calculate_mobility \u00b6 Command-line option: --calculate-mobility/--no-calculate-mobility Whether to calculate n - and p -type carrier mobilities. Has no effect for metallic systems where mobility is not well defined. Default: True separate_scattering_mobilities \u00b6 Command-line option: --separate-mobility/--no-separate-mobility Whether to report the individual scattering rate mobilities. I.e., the mobility if only that scattering mechanism were present. Default: True file_format \u00b6 Command-line option: --file-format The output file format. Options are: json , yaml , and txt . Note, write_mesh=True is not supported using the txt format. Default: json write_input \u00b6 Command-line option: --write-input/--no-write-input Whether to write the input settings to a file called amset_settings.yaml . Default: False write_mesh \u00b6 Command-line option: --write-mesh/--no-write-mesh Whether to write the full k-dependent properties to disk. Properties include the band energy, velocity and scattering rate. Only k-points in the irreducible wedge are included. Note: for large values of interpolation_factor his option can use a large amount of disk space. Default: False print_log \u00b6 Command-line option: --print-log/--no-log Whether to print log messages. Default: True","title":"Settings"},{"location":"settings/#settings","text":"Whether using AMSET via the command-line or python API, the primary controls are contained in the settings file or dictionary. An example AMSET settings file is given here . The settings are grouped into sections. The description for each section and settings parameter is given below. All settings are also controllable via command-line flags. The corresponding command-line interface options are also detailed below. Any settings specified via the command-line will override those in the settings file.","title":"Settings"},{"location":"settings/#general-settings","text":"These settings control the AMSET run, including interpolation density and temperature/doping ranges.","title":"General settings"},{"location":"settings/#doping","text":"Command-line option: -d, --doping Controls which doping levels (carrier concentrations) to calculate. Concentrations given with the unit cm \u20133 . Can be specified directly as a comma separated list, e.g.: 1E13 , 1E14 , 1E15 , 1E16 , 1E17 , 1E18 , 1E19 , 1E20 Alternatively, ranges can be specified using the syntax start:stop:num_steps . For example, the same doping concentrations as above can be written:: 1E13 : 1E20 : 8 Negative concentrations indicate electrons ( n -type doping), positive concentrations indicate holes ( p -type doping). Default: ['1.e15', '1.e16', '1.e17', '1.e18', '1.e19', '1.e20', '-1.e15', '-1.e16', '-1.e17', '-1.e18', '-1.e19', '-1.e20']","title":"doping"},{"location":"settings/#temperatures","text":"Command-line option: -t, --temperatures Controls which temperatures to calculate. Temperatures given in Kelvin. Can be specified directly as a comma separated list, e.g.:: 300 , 400 , 500 , 600 , 700 , 800 , 900 , 1000 Alternatively, ranges can be specified using the syntax start:stop:num_steps , For example, the same temperature range as above can be written:: 300 : 1000 : 8 Default: [300]","title":"temperatures"},{"location":"settings/#interpolation_factor","text":"Command-line option: -i, --interpolation-factor Interpolation factor controlling the interpolation density. Larger numbers indicate greater density. The number of k-points in the interpolated band structure will be roughly equal to interpolation_factor times the number of k-points in the DFT calculation. This is the primary option for controlling the accuracy of the calculated scattering rates. Transport properties should be converged with respect to this parameter. Default: 10","title":"interpolation_factor"},{"location":"settings/#scattering_type","text":"Command-line option: -s, --scattering-type Which scattering mechanisms to calculate. If set to auto , the scattering mechanisms will automatically be determined based on the specified material parameters. Alternatively, a comma separated list of scattering mechanism can be specified. Options include: ACD (acoustic deformation potential scattering) IMP (ionized impurity scattering) PIE (piezoelectric scattering) POP (polar optical phonon scattering) CRT (constant relaxation time) MFP (mean free path scattering) For example, ACD,IMP,POP . The scattering mechanism will only be calculated if all the required material parameters for that mechanism are set. See the scattering section <scattering> _ of the documentation for more details. Default: auto","title":"scattering_type"},{"location":"settings/#wavefunction_coefficients","text":"Command-line option: -w, --wavefunction-coefficients Path to wavefunction coefficients file. The coefficients can be extracted from a VASP WAVECAR using the command: amset wave This command also requires the vasprun.xml to be in the same folder. Default: wavefunction.h5","title":"wavefunction_coefficients"},{"location":"settings/#use_projections","text":"Command-line option: --use-projections Use projections to calculate wavefunction overlap. This can often result in very poor performance, and so is not recommended . In order to use projections, the VASP calculation must be performed with LORBIT = 11 . Default: False","title":"use_projections"},{"location":"settings/#scissor","text":"Command-line option: -s, --scissor The amount to scissor the band gap, in eV. Positive values indicate band gap opening, negative values indicate band gap narrowing. Has no effect for metallic systems.","title":"scissor"},{"location":"settings/#bandgap","text":"Command-line option: -b, --bandgap Set the band gap to this value, in eV. Will automatically determine and apply the correct band gap scissor for the specified band gap. Cannot be used in combination with the scissor option. Has no effect for metallic systems.","title":"bandgap"},{"location":"settings/#zero_weighted_kpoints","text":"Command-line option: -z, --zero-weighted-kpoints How to handle \"zero-weighted\" k-points if they are present in the calculation. Options are: keep: Keep zero-weighted k-points in the band structure. drop: Drop zero-weighted k-points, keeping only the weighted k-points. prefer: Drop weighted-kpoints if zero-weighted k-points are present in the calculation (useful for cheap hybrid calculations).","title":"zero_weighted_kpoints"},{"location":"settings/#free_carrier_screening","text":"Command-line option: --free-carrier-screening Whether free carriers will screen polar optical phonon and piezoelectric scattering rates. This modifies the matrix elements from a 1 \u2223 q + G \u2223 \\frac{1}{\\left | \\mathbf{q} + \\mathbf{G} \\right |} \u2223 q + G \u2223 1 \u200b dependence to a 1 \u2223 q + G \u2223 + \u03b2 \u221e \\frac{1}{\\left | \\mathbf{q} + \\mathbf{G} \\right | + \\beta_\\infty} \u2223 q + G \u2223 + \u03b2 \u221e \u200b 1 \u200b dependence, where \u03b2 \u221e \\beta_\\infty \u03b2 \u221e \u200b is the inverse screening length that depends on the temperature, carrier concentration, and high-frequency dielectric constant. This can result in a large reduction in the scattering rates at high carrier concentrations. Default: False","title":"free_carrier_screening"},{"location":"settings/#material-settings","text":"These settings control the materials properties required to calculate the scattering rates.","title":"Material settings"},{"location":"settings/#high_frequency_dielectric","text":"Command-line option: --high-frequency-dielectric The high-frequency dielectric constant, in units of \u03f5 0 \\epsilon_0 \u03f5 0 \u200b . Can be given as a 3x3 tensor or a single isotropic value. Required for: POP, PIE","title":"high_frequency_dielectric"},{"location":"settings/#static_dielectric","text":"Command-line option: --static-dielectric The static dielectric constant, in units of \u03f5 0 \\epsilon_0 \u03f5 0 \u200b . Can be given as a 3x3 tensor or a single isotropic value. Required for: IMP, POP","title":"static_dielectric"},{"location":"settings/#elastic_constant","text":"Command-line option: --elastic-constant The elastic constants as the full 3x3x3x3 tensor or 6x6 Voigt form, in GPa. Alteratively, a single averaged value can be given (not recommended). Required for: ACD, PIE","title":"elastic_constant"},{"location":"settings/#deformation_potential","text":"Command-line option: --deformation-potential Path to file containing deformation potentials for all bands, generated using amset deform read . Alternatively, Can be given as a comma separated list of two deformation potentials for the VBM and CBM, respectively in eV, e.g.: 8.6 , 7.4 Or a single value to use for all bands in metals. Required for: ACD","title":"deformation_potential"},{"location":"settings/#piezoelectric_constant","text":"command-line option: --piezoelectric-constant The piezoelectric constants ( e \\mathbf{e} e ) in C/m 2 given as either the full 3x3x3 tensor or the 3x6 Voigt form. Required for: PIE","title":"piezoelectric_constant"},{"location":"settings/#acceptor_charge","text":"Command-line option: --acceptor-charge The charge of acceptor defects, in units of electron charge. Required for: IMP Default: 1","title":"acceptor_charge"},{"location":"settings/#donor_charge","text":"Command-line option: --donor-charge The charge of donor defects, in units of electron charge. Required for: IMP Default: 1","title":"donor_charge"},{"location":"settings/#pop_frequency","text":"Command-line option: --pop-frequency The polar optical phonon frequency, in THz. Generally, it is ok to take the highest optical phonon frequency at the Gamma point. Required for: POP","title":"pop_frequency"},{"location":"settings/#mean_free_path","text":"Command-line option: --mean-free-path Basic version of boundary scattering in which the scattering rate is set to v g / L v_g / L v g \u200b / L , where v g v_g v g \u200b is the group velocity and L L L is the mean free path in nm. Required for: MFP","title":"mean_free_path"},{"location":"settings/#constant_relaxation_time","text":"Command-line option: --constant-relaxation-time A constant relaxation time to use as the minimum relaxation time for all k-points. It is not recommended to use this option in conjunction with any other scattering rates. Instead, this should be used to compare against results calculated in the constant relaxation time approximation. Required for: CRT","title":"constant_relaxation_time"},{"location":"settings/#performance-settings","text":"These settings control the speed and accuracy of calculated properties. In general the defaults should give converged values.","title":"Performance settings"},{"location":"settings/#energy_cutoff","text":"Command-line option: --energy-cutoff The energy cut-off used to determine which bands to include in the interpolation and scattering rate calculation, in eV. Default: 1.5","title":"energy_cutoff"},{"location":"settings/#fd_tol","text":"Command-line option: --fd-tol The Fermi\u2013Dirac derivative tolerance that controls which k-points to calculate the scattering for. Given as a percentage from 0 to 1. Larger values indicate that the fewer k-points will be calculated, smaller values indicate a larger portion of the Brillouin zone will be calculated. Default: 0.05","title":"fd_tol"},{"location":"settings/#dos_estep","text":"Command-line option: --dos-estep The energy step for the calculated density of states and transport density of states, in eV. Controls the accuracy of determining the position of the Fermi level and transport properties. Smaller is better but can quickly get more expensive. Default: 0.01","title":"dos_estep"},{"location":"settings/#symprec","text":"Command-line option: --symprec The symmetry finding tolerance, in \u00c5. Default: 0.01","title":"symprec"},{"location":"settings/#nworkers","text":"Command-line option: --nworkers Number of processors to use. -1 indicates to use all available processors. When using multiprocessing it is recommended to run export OMP_NUM_THREADS=1 before running amset. Default: -1","title":"nworkers"},{"location":"settings/#cache_wavefunction","text":"Command-line option: --cache-wavefunction Cache interpolated wavefunction coefficients. This means that the coefficients for each band and k-point on the Fourier interpolated k-point mesh are only calculated once. While this can yield a significant speed-up, it also massively increases memory requirements, especially if using a low value of fd_tol , or if the system contains very flat bands. If memory issues occur, it is recommended to set cache_wavefunction to False . Default: True","title":"cache_wavefunction"},{"location":"settings/#output-settings","text":"These settings control the output files and logging.","title":"Output settings"},{"location":"settings/#calculate_mobility","text":"Command-line option: --calculate-mobility/--no-calculate-mobility Whether to calculate n - and p -type carrier mobilities. Has no effect for metallic systems where mobility is not well defined. Default: True","title":"calculate_mobility"},{"location":"settings/#separate_scattering_mobilities","text":"Command-line option: --separate-mobility/--no-separate-mobility Whether to report the individual scattering rate mobilities. I.e., the mobility if only that scattering mechanism were present. Default: True","title":"separate_scattering_mobilities"},{"location":"settings/#file_format","text":"Command-line option: --file-format The output file format. Options are: json , yaml , and txt . Note, write_mesh=True is not supported using the txt format. Default: json","title":"file_format"},{"location":"settings/#write_input","text":"Command-line option: --write-input/--no-write-input Whether to write the input settings to a file called amset_settings.yaml . Default: False","title":"write_input"},{"location":"settings/#write_mesh","text":"Command-line option: --write-mesh/--no-write-mesh Whether to write the full k-dependent properties to disk. Properties include the band energy, velocity and scattering rate. Only k-points in the irreducible wedge are included. Note: for large values of interpolation_factor his option can use a large amount of disk space. Default: False","title":"write_mesh"},{"location":"settings/#print_log","text":"Command-line option: --print-log/--no-log Whether to print log messages. Default: True","title":"print_log"},{"location":"transport-properties/","text":".katex img { display: block; position: absolute; width: 100%; height: inherit; } Transport Properties \u00b6 Electronic transport properties \u2014 namely, conductivity, Seebeck coefficient, and electronic component of thermal conductivity \u2014 are calculated through the Onsager coefficients . The spectral conductivity is calculated as \u03a3 \u03b1 \u03b2 ( \u03b5 ) = \u2211 n \u222b d k 8 \u03c0 3 v n k , \u03b1 v n k , \u03b2 \u03c4 n k \u03b4 ( \u03b5 \u2212 \u03b5 n k ) , \\Sigma_{\\alpha\\beta}(\\varepsilon) = \\sum_n \\int \\frac{\\mathrm{d}{\\mathbf{k}}}{8\\pi^3} v_{n\\mathbf{k},\\alpha}v_{n\\mathbf{k},\\beta}\\tau_{n\\mathbf{k}} \\delta{\\left(\\varepsilon - \\varepsilon_{n\\mathbf{k}} \\right )}, \u03a3 \u03b1 \u03b2 \u200b ( \u03b5 ) = n \u2211 \u200b \u222b 8 \u03c0 3 d k \u200b v n k , \u03b1 \u200b v n k , \u03b2 \u200b \u03c4 n k \u200b \u03b4 ( \u03b5 \u2212 \u03b5 n k \u200b ) , where \u03b1 \\alpha \u03b1 and \u03b2 \\beta \u03b2 denote Cartesian coordinates, \u03b5 n k \\varepsilon_{n\\mathbf{k}} \u03b5 n k \u200b and v n k , \u03b1 v_{n\\mathbf{k},\\alpha} v n k , \u03b1 \u200b are the energy and group velocity of band index n n n and wave vector k \\mathbf{k} k , respectively. The spectral conductivity can be used to compute the moments of the generalized transport coefficients L \u03b1 \u03b2 n = e 2 \u222b \u03a3 \u03b1 \u03b2 ( \u03b5 ) ( \u03b5 \u2212 \u03b5 F ) n [ \u2212 \u2202 f 0 \u2202 \u03b5 ] d \u03b5 , \\mathcal{L}^n_{\\alpha\\beta} = e^2 \\int \\Sigma_{\\alpha\\beta}(\\varepsilon) (\\varepsilon - \\varepsilon_\\mathrm{F})^n \\left [ -\\frac{\\partial f^0}{\\partial \\varepsilon} \\right ] \\mathrm{d}{\\varepsilon}, L \u03b1 \u03b2 n \u200b = e 2 \u222b \u03a3 \u03b1 \u03b2 \u200b ( \u03b5 ) ( \u03b5 \u2212 \u03b5 F \u200b ) n [ \u2212 \u2202 \u03b5 \u2202 f 0 \u200b ] d \u03b5 , where e e e is the electron charge and \u03b5 F \\varepsilon_\\mathrm{F} \u03b5 F \u200b is the Fermi level at a certain doping concentration and temperature T T T . The Fermi\u2013Dirac distribution is given by f n k 0 = 1 exp \u2061 [ ( \u03b5 n k \u2212 \u03b5 F ) / k B T ] + 1 , f^0_{n\\mathbf{k}} = \\frac{1}{\\exp\\left[{(\\varepsilon_{n\\mathbf{k}}-\\varepsilon_\\mathrm{F})/k_\\mathrm{B}T} \\right] + 1}, f n k 0 \u200b = exp [ ( \u03b5 n k \u200b \u2212 \u03b5 F \u200b ) / k B \u200b T ] + 1 1 \u200b , where k B k_\\mathrm{B} k B \u200b is the Boltzmann constant. Electrical conductivity ( \u03c3 \\sigma \u03c3 ), Seebeck coefficient ( S S S ), and the charge carrier contribution to thermal conductivity ( \u03ba \\kappa \u03ba ) are obtained as \u03c3 \u03b1 \u03b2 = L \u03b1 \u03b2 0 , S \u03b1 \u03b2 = 1 e T L \u03b1 \u03b2 1 L \u03b1 \u03b2 0 , \u03ba \u03b1 \u03b2 = 1 e 2 T [ ( L \u03b1 \u03b2 1 ) 2 L \u03b1 \u03b2 0 \u2212 L \u03b1 \u03b2 2 ] . \\begin{aligned} \\sigma_{\\alpha\\beta} ={}& \\mathcal{L}_{\\alpha\\beta}^0, \\\\ S_{\\alpha\\beta} ={}& \\frac{1}{eT} \\frac{\\mathcal{L}_{\\alpha\\beta}^1}{\\mathcal{L}_{\\alpha\\beta}^0}, \\\\ \\kappa_{\\alpha\\beta} = {}& \\frac{1}{e^2T} \\left [ \\frac{(\\mathcal{L}_{\\alpha\\beta}^1)^2}{\\mathcal{L}_{\\alpha\\beta}^0} - \\mathcal{L}_{\\alpha\\beta}^2 \\right ] . \\end{aligned} \u03c3 \u03b1 \u03b2 \u200b = S \u03b1 \u03b2 \u200b = \u03ba \u03b1 \u03b2 \u200b = \u200b L \u03b1 \u03b2 0 \u200b , e T 1 \u200b L \u03b1 \u03b2 0 \u200b L \u03b1 \u03b2 1 \u200b \u200b , e 2 T 1 \u200b [ L \u03b1 \u03b2 0 \u200b ( L \u03b1 \u03b2 1 \u200b ) 2 \u200b \u2212 L \u03b1 \u03b2 2 \u200b ] . \u200b","title":"Transport Properties"},{"location":"transport-properties/#transport-properties","text":"Electronic transport properties \u2014 namely, conductivity, Seebeck coefficient, and electronic component of thermal conductivity \u2014 are calculated through the Onsager coefficients . The spectral conductivity is calculated as \u03a3 \u03b1 \u03b2 ( \u03b5 ) = \u2211 n \u222b d k 8 \u03c0 3 v n k , \u03b1 v n k , \u03b2 \u03c4 n k \u03b4 ( \u03b5 \u2212 \u03b5 n k ) , \\Sigma_{\\alpha\\beta}(\\varepsilon) = \\sum_n \\int \\frac{\\mathrm{d}{\\mathbf{k}}}{8\\pi^3} v_{n\\mathbf{k},\\alpha}v_{n\\mathbf{k},\\beta}\\tau_{n\\mathbf{k}} \\delta{\\left(\\varepsilon - \\varepsilon_{n\\mathbf{k}} \\right )}, \u03a3 \u03b1 \u03b2 \u200b ( \u03b5 ) = n \u2211 \u200b \u222b 8 \u03c0 3 d k \u200b v n k , \u03b1 \u200b v n k , \u03b2 \u200b \u03c4 n k \u200b \u03b4 ( \u03b5 \u2212 \u03b5 n k \u200b ) , where \u03b1 \\alpha \u03b1 and \u03b2 \\beta \u03b2 denote Cartesian coordinates, \u03b5 n k \\varepsilon_{n\\mathbf{k}} \u03b5 n k \u200b and v n k , \u03b1 v_{n\\mathbf{k},\\alpha} v n k , \u03b1 \u200b are the energy and group velocity of band index n n n and wave vector k \\mathbf{k} k , respectively. The spectral conductivity can be used to compute the moments of the generalized transport coefficients L \u03b1 \u03b2 n = e 2 \u222b \u03a3 \u03b1 \u03b2 ( \u03b5 ) ( \u03b5 \u2212 \u03b5 F ) n [ \u2212 \u2202 f 0 \u2202 \u03b5 ] d \u03b5 , \\mathcal{L}^n_{\\alpha\\beta} = e^2 \\int \\Sigma_{\\alpha\\beta}(\\varepsilon) (\\varepsilon - \\varepsilon_\\mathrm{F})^n \\left [ -\\frac{\\partial f^0}{\\partial \\varepsilon} \\right ] \\mathrm{d}{\\varepsilon}, L \u03b1 \u03b2 n \u200b = e 2 \u222b \u03a3 \u03b1 \u03b2 \u200b ( \u03b5 ) ( \u03b5 \u2212 \u03b5 F \u200b ) n [ \u2212 \u2202 \u03b5 \u2202 f 0 \u200b ] d \u03b5 , where e e e is the electron charge and \u03b5 F \\varepsilon_\\mathrm{F} \u03b5 F \u200b is the Fermi level at a certain doping concentration and temperature T T T . The Fermi\u2013Dirac distribution is given by f n k 0 = 1 exp \u2061 [ ( \u03b5 n k \u2212 \u03b5 F ) / k B T ] + 1 , f^0_{n\\mathbf{k}} = \\frac{1}{\\exp\\left[{(\\varepsilon_{n\\mathbf{k}}-\\varepsilon_\\mathrm{F})/k_\\mathrm{B}T} \\right] + 1}, f n k 0 \u200b = exp [ ( \u03b5 n k \u200b \u2212 \u03b5 F \u200b ) / k B \u200b T ] + 1 1 \u200b , where k B k_\\mathrm{B} k B \u200b is the Boltzmann constant. Electrical conductivity ( \u03c3 \\sigma \u03c3 ), Seebeck coefficient ( S S S ), and the charge carrier contribution to thermal conductivity ( \u03ba \\kappa \u03ba ) are obtained as \u03c3 \u03b1 \u03b2 = L \u03b1 \u03b2 0 , S \u03b1 \u03b2 = 1 e T L \u03b1 \u03b2 1 L \u03b1 \u03b2 0 , \u03ba \u03b1 \u03b2 = 1 e 2 T [ ( L \u03b1 \u03b2 1 ) 2 L \u03b1 \u03b2 0 \u2212 L \u03b1 \u03b2 2 ] . \\begin{aligned} \\sigma_{\\alpha\\beta} ={}& \\mathcal{L}_{\\alpha\\beta}^0, \\\\ S_{\\alpha\\beta} ={}& \\frac{1}{eT} \\frac{\\mathcal{L}_{\\alpha\\beta}^1}{\\mathcal{L}_{\\alpha\\beta}^0}, \\\\ \\kappa_{\\alpha\\beta} = {}& \\frac{1}{e^2T} \\left [ \\frac{(\\mathcal{L}_{\\alpha\\beta}^1)^2}{\\mathcal{L}_{\\alpha\\beta}^0} - \\mathcal{L}_{\\alpha\\beta}^2 \\right ] . \\end{aligned} \u03c3 \u03b1 \u03b2 \u200b = S \u03b1 \u03b2 \u200b = \u03ba \u03b1 \u03b2 \u200b = \u200b L \u03b1 \u03b2 0 \u200b , e T 1 \u200b L \u03b1 \u03b2 0 \u200b L \u03b1 \u03b2 1 \u200b \u200b , e 2 T 1 \u200b [ L \u03b1 \u03b2 0 \u200b ( L \u03b1 \u03b2 1 \u200b ) 2 \u200b \u2212 L \u03b1 \u03b2 2 \u200b ] . \u200b","title":"Transport Properties"},{"location":"using/","text":"Getting started \u00b6 AMSET can be used from the command-line as a standalone program or from the Python API. In both cases, the primary input is a vasprun.xml file from a uniform band structure calculation (i.e., on a regular k-point grid and not along high-symmetry lines). Temperature and doping ranges, scattering rates, and calculation parameters are controlled through the settings file. More details on the available settings are provided in the settings section of the documentation. An example settings file is given here . From the command-line \u00b6 AMSET can be run from the command-line using the amset run command. The help menu listing a summary of the command-line options can be printed using: amset run -h By default, AMSET will look for a vasprun.xml file and settings.yaml file in the current directory. A different directory can be specified using the directory option, e.g.: amset run --directory path/to/files Any settings specified via the command line will override those in the settings file. For example, the interpolation factor can be easily controlled using: amset run --interpolation-factor 20 Obtaining best performance To obtain the best performance, it is recommended to run export OMP_NUM_THREADS=1 before running AMSET. From the Python API \u00b6 Greater configurability is available when running AMSET from the Python API. For example, the following snippet will look for a vasprun.xml and settings.yaml file in the current directory, then run AMSET. from amset.core.run import Runner if __name__ == \"__main__\" : runner = Runner . from_directory ( directory = '.' ) amset_data = runner . run () The API allows for easy convergence of parameters. For example, the following snippet will run AMSET using multiple interpolation factors. from amset.core.run import Runner settings = { 'interpolation_factor' : 5 } if __name__ == \"__main__\" : outputs = [] for i_factor in range ( 10 , 100 , 10 ): settings [ \"interpolation_factor\" ] = i_factor runner = Runner . from_directory ( directory = '.' , settings_override = settings ) outputs . append ( runner . run ()) When running AMSET from the API, it is not necessary to use a settings file at all. Instead the settings can be passed as a dictionary. For example: from amset.core.run import Runner settings = { \"interpolation_factor\" : 150 , \"doping\" : [ 1e15 , 1e16 , 1e17 , 1e18 ], \"temperatures\" : [ 300 ], \"deformation_potential\" : ( 6.5 , 6.5 ), \"elastic_constant\" : 190 , \"static_dielectric\" : 13.1 , } if __name__ == \"__main__\" : runner = Runner . from_vasprun ( \"vasprun.xml.gz\" , settings ) amset_data = runner . run ()","title":"Getting Started"},{"location":"using/#getting-started","text":"AMSET can be used from the command-line as a standalone program or from the Python API. In both cases, the primary input is a vasprun.xml file from a uniform band structure calculation (i.e., on a regular k-point grid and not along high-symmetry lines). Temperature and doping ranges, scattering rates, and calculation parameters are controlled through the settings file. More details on the available settings are provided in the settings section of the documentation. An example settings file is given here .","title":"Getting started"},{"location":"using/#from-the-command-line","text":"AMSET can be run from the command-line using the amset run command. The help menu listing a summary of the command-line options can be printed using: amset run -h By default, AMSET will look for a vasprun.xml file and settings.yaml file in the current directory. A different directory can be specified using the directory option, e.g.: amset run --directory path/to/files Any settings specified via the command line will override those in the settings file. For example, the interpolation factor can be easily controlled using: amset run --interpolation-factor 20 Obtaining best performance To obtain the best performance, it is recommended to run export OMP_NUM_THREADS=1 before running AMSET.","title":"From the command-line"},{"location":"using/#from-the-python-api","text":"Greater configurability is available when running AMSET from the Python API. For example, the following snippet will look for a vasprun.xml and settings.yaml file in the current directory, then run AMSET. from amset.core.run import Runner if __name__ == \"__main__\" : runner = Runner . from_directory ( directory = '.' ) amset_data = runner . run () The API allows for easy convergence of parameters. For example, the following snippet will run AMSET using multiple interpolation factors. from amset.core.run import Runner settings = { 'interpolation_factor' : 5 } if __name__ == \"__main__\" : outputs = [] for i_factor in range ( 10 , 100 , 10 ): settings [ \"interpolation_factor\" ] = i_factor runner = Runner . from_directory ( directory = '.' , settings_override = settings ) outputs . append ( runner . run ()) When running AMSET from the API, it is not necessary to use a settings file at all. Instead the settings can be passed as a dictionary. For example: from amset.core.run import Runner settings = { \"interpolation_factor\" : 150 , \"doping\" : [ 1e15 , 1e16 , 1e17 , 1e18 ], \"temperatures\" : [ 300 ], \"deformation_potential\" : ( 6.5 , 6.5 ), \"elastic_constant\" : 190 , \"static_dielectric\" : 13.1 , } if __name__ == \"__main__\" : runner = Runner . from_vasprun ( \"vasprun.xml.gz\" , settings ) amset_data = runner . run ()","title":"From the Python API"}]}